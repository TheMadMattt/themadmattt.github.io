{"version":3,"sources":["pages/Home/components/DisplayLoadingTimes.jsx","pages/Home/Home.jsx","routes/Routes.js","routes/Navigation.jsx","components/NavigationBar.jsx","App.jsx","index.js","utils/FormatNumber.js","utils/ExcelService.js"],"names":["DisplayLoadingTimes","title","times","className","map","time","index","FormatNumber","fcpTitle","lcpTitle","ttfbTitle","pageLoadingTitle","Home","props","reloadsCount","timer","state","fid","fcp","lcp","ttfb","pageLoaded","pageLoadedList","fcpList","lcpList","clsList","ttfbList","localStorage","getItem","getTTFB","entries","duration","JSON","parse","push","value","setItem","stringify","setState","getFCP","getLCP","this","setTimeout","reload","clearTimeout","clearLocalStorage","clear","data","excelService","savePageLoadingToExcel","toString","window","location","Button","variant","color","onClick","runBenchmark","startIcon","saveTimesToExcel","Component","RoutesForRouter","sidebarName","component","route","lazy","RoutesForDrawer","icon","children","useStyles","makeStyles","theme","nested","paddingLeft","spacing","MenuItemCollapse","prop","useState","find","child","activeRoute","open","setIsOpen","classes","MenuItem","ListItemIcon","ListItemText","primary","Collapse","in","MenuList","disablePadding","key","selected","closeDrawer","MenuItemLink","to","style","textDecoration","NavigationList","routeName","pathname","toggleDrawer","length","createStyles","root","flexGrow","menuButton","marginRight","textAlign","homeLink","drawer","width","fullList","withRouter","isOpen","drawerState","AppBar","position","Toolbar","IconButton","edge","Typography","href","Drawer","paper","onClose","role","Navigation","createMuiTheme","palette","main","App","fallback","exact","path","ReactDOM","render","document","getElementById","decimalPlaces","Number","parseFloat","toFixed","saveTimersToExcel","timers","workBookTitle","wb","XLSX","book_new","forEach","rowsNumberStringList","rowsNumberList","String","ws","json_to_sheet","header","rowsNumber","x","timesList","y","sheet_add_json","skipHeader","origin","r","c","book_append_sheet","timerName","loadingTimes","timerExcel","item","lp","getAverageTime","reduce","a","b"],"mappings":"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","file":"static/js/main.3bd6331b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {FormatNumber} from \"../../../utils/FormatNumber\";\r\n\r\nconst decimalPlaces = 5;\r\n\r\nexport const DisplayLoadingTimes = ({title, times}) => {\r\n    return (\r\n        <div>\r\n            <p><b>{ title }</b></p>\r\n            <ul className=\"loading-metrics-box\">\r\n                {times.map((time, index) => <li key={index}>{FormatNumber(time, decimalPlaces)} ms</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./Home.css\"\r\nimport { getFCP, getLCP, getTTFB } from 'web-vitals';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {DisplayLoadingTimes} from \"./components/DisplayLoadingTimes\";\r\nimport {FormatNumber} from \"../../utils/FormatNumber\";\r\nimport excelService from \"../../utils/ExcelService\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst fcpTitle = \"First Contentful Paint (FCP)\";\r\nconst lcpTitle = \"Largest Contentful Paint (LCP)\";\r\nconst ttfbTitle = \"Time To First Byte (TTFB)\";\r\nconst pageLoadingTitle = \"Page loading time\";\r\n\r\nconst decimalPlaces = 5;\r\n\r\nclass Home extends Component {\r\n    reloadsCount = 0;\r\n    timer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fid: 0,\r\n            fcp: 0,\r\n            lcp: 0,\r\n            ttfb: 0,\r\n            pageLoaded: 0,\r\n            pageLoadedList: [],\r\n            fcpList: [],\r\n            lcpList: [],\r\n            clsList: [],\r\n            ttfbList: []\r\n        }\r\n        this.reloadsCount = +localStorage.getItem(\"reloadsCounter\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        getTTFB(ttfb => {\r\n            const perfData = ttfb.entries[0];\r\n            const pageLoaded = perfData.duration;\r\n            let pageLoadedList = JSON.parse(localStorage.getItem(\"pageLoaded_react\"));\r\n            let ttfbList = JSON.parse(localStorage.getItem(\"ttfb_react\"));\r\n            if (pageLoadedList === null) {\r\n                pageLoadedList = [];\r\n            }\r\n            if (ttfbList === null) {\r\n                ttfbList = [];\r\n            }\r\n            pageLoadedList.push(pageLoaded);\r\n            ttfbList.push(ttfb.value)\r\n            localStorage.setItem(\"pageLoaded_react\", JSON.stringify(pageLoadedList));\r\n            localStorage.setItem(\"ttfb_react\", JSON.stringify(ttfbList));\r\n            this.setState({ttfb, pageLoaded, pageLoadedList, ttfbList});\r\n        });\r\n        getFCP(fcp => {\r\n            let fcpList = JSON.parse(localStorage.getItem(\"fcp_react\"));\r\n            if (fcpList === null) {\r\n                fcpList = [];\r\n            }\r\n            fcpList.push(fcp.value);\r\n            localStorage.setItem(\"fcp_react\", JSON.stringify(fcpList));\r\n            this.setState({fcp, fcpList});\r\n        }, true);\r\n        getLCP(lcp => {\r\n            let lcpList = JSON.parse(localStorage.getItem(\"lcp_react\"));\r\n            if (lcpList === null) {\r\n                lcpList = [];\r\n            }\r\n            lcpList.push(lcp.value);\r\n            localStorage.setItem(\"lcp_react\", JSON.stringify(lcpList));\r\n            this.setState({lcp, lcpList});\r\n        }, true);\r\n        this.timer = setTimeout(() => this.reload(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    runBenchmark() {\r\n        this.reloadsCount = 5;\r\n        this.clearLocalStorage();\r\n        this.reload();\r\n    }\r\n\r\n    clearLocalStorage() {\r\n        localStorage.clear();\r\n        this.setState({ fcpList: [], lcpList: [], ttfbList: [], pageLoadedList: []});\r\n    }\r\n\r\n    saveTimesToExcel() {\r\n        const times = [\r\n            {\r\n                title: 'fcp',\r\n                data: this.state.fcpList\r\n            },\r\n            {\r\n                title: 'lcp',\r\n                data: this.state.lcpList\r\n            },\r\n            {\r\n                title: 'ttfb',\r\n                data: this.state.ttfbList,\r\n            },\r\n            {\r\n                title: 'pageLoadingTime',\r\n                data: this.state.pageLoadedList\r\n            }\r\n        ];\r\n\r\n        excelService.savePageLoadingToExcel(times, \"PAGE-LOADING-TIMES-REACT\");\r\n    }\r\n\r\n    reload() {\r\n        if(this.reloadsCount > 0) {\r\n            localStorage.setItem(\"reloadsCounter\", (--this.reloadsCount).toString());\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home flex-column\">\r\n                <div>\r\n                    <p><b>{fcpTitle}:</b> {FormatNumber(this.state.fcp.value, decimalPlaces)} ms</p>\r\n                    <p><b>{lcpTitle}:</b> {FormatNumber(this.state.lcp.value, decimalPlaces)} ms</p>\r\n                    <p><b>{ttfbTitle}:</b> {FormatNumber(this.state.ttfb.value, decimalPlaces)} ms</p>\r\n                    <p><b>{pageLoadingTitle}:</b> {FormatNumber(this.state.pageLoaded, decimalPlaces) } ms</p>\r\n                </div>\r\n                <div className=\"flex-row flex-center\">\r\n                    <DisplayLoadingTimes title={fcpTitle} times={this.state.fcpList}/>\r\n                    <DisplayLoadingTimes title={lcpTitle} times={this.state.lcpList}/>\r\n                    <DisplayLoadingTimes title={ttfbTitle} times={this.state.ttfbList}/>\r\n                    <DisplayLoadingTimes title={pageLoadingTitle} times={this.state.pageLoadedList}/>\r\n                </div>\r\n                <div className=\"ButtonMargin\">\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Run benchmark</Button>\r\n\r\n                    <Button variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => this.clearLocalStorage()}>Clear local storage</Button>\r\n\r\n                    <Button variant=\"contained\" color=\"default\" startIcon={<GetAppIcon />}\r\n                            onClick={() => this.saveTimesToExcel()}>\r\n                        Save times to excel\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import Home from \"../pages/Home/Home\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SpeedIcon from \"@material-ui/icons/Speed\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport React, {lazy} from \"react\";\r\n\r\nconst LifecycleHooks = lazy(() => import('../pages/LifecycleHooks/LifecycleHooksBenchmark'));\r\nconst JSONPlaceholder = lazy(() => import('../pages/JSONPlaceholder/JSONPlaceholderBenchmark'));\r\nconst LocalApi = lazy(() => import('../pages/LocalApi/LocalApiBenchmark'));\r\n\r\nexport const RoutesForRouter = [\r\n    {\r\n        sidebarName: 'Home',\r\n        component: Home,\r\n        route: '/'\r\n    },\r\n    {\r\n        sidebarName: 'Lifecycle hooks benchmark',\r\n        component: LifecycleHooks,\r\n        route: '/benchmarks/lifecycle-crud'\r\n    },\r\n    {\r\n        sidebarName: '{JSON} Placeholder',\r\n        component: JSONPlaceholder,\r\n        route: '/benchmarks/json-placeholder'\r\n    },\r\n    {\r\n        sidebarName: 'Local API server',\r\n        component: LocalApi,\r\n        route: '/benchmarks/local-rest-api'\r\n    }\r\n];\r\n\r\nexport const RoutesForDrawer = [\r\n    {\r\n        sidebarName: 'Home',\r\n        route: '/',\r\n        icon: <HomeIcon/>,\r\n        children: [],\r\n    },\r\n    {\r\n        sidebarName: 'Lifecycle hooks benchmark',\r\n        route: '/benchmarks/lifecycle-crud',\r\n        icon: <SpeedIcon/>,\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'REST API benchmark',\r\n        route: '',\r\n        icon: <SpeedIcon/>,\r\n        children: [\r\n            {\r\n                sidebarName: '{JSON} Placeholder',\r\n                route: '/benchmarks/json-placeholder',\r\n                icon: <PublicIcon/>,\r\n                children: []\r\n            },\r\n            {\r\n                sidebarName: 'Local API server',\r\n                route: '/benchmarks/local-rest-api',\r\n                icon: <PublicIcon/>,\r\n                children: []\r\n            }\r\n        ]\r\n    }\r\n];\r\n","import {NavLink} from \"react-router-dom\";\r\nimport {Collapse, ListItemIcon, ListItemText, MenuItem, MenuList} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {RoutesForDrawer} from \"./Routes\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nconst MenuItemCollapse = (prop) => {\r\n    const checkRouteActive = () => {\r\n        const isActive = prop.children.find(child => prop.activeRoute(child.route));\r\n        return !!isActive;\r\n    }\r\n    const [open, setIsOpen] = useState(checkRouteActive);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <MenuItem onClick={() => setIsOpen(!open)}>\r\n                <ListItemIcon>{prop.icon}</ListItemIcon>\r\n                <ListItemText primary={prop.sidebarName} />\r\n                <ListItemIcon>{open ? <ExpandLessIcon/> : <ExpandMoreIcon/> }</ListItemIcon>\r\n            </MenuItem>\r\n            <Collapse in={open}>\r\n                <MenuList disablePadding>\r\n                    { prop.children.map((child, key) =>\r\n                        <MenuItemLink key={key} {...child} className={classes.nested}\r\n                                      selected={prop.activeRoute(child.route)}\r\n                                      closeDrawer={prop.closeDrawer}/>\r\n                    )}\r\n                </MenuList>\r\n            </Collapse>\r\n        </>\r\n    )\r\n}\r\n\r\nconst MenuItemLink = (prop) => {\r\n    return (\r\n        <NavLink to={prop.route} onClick={prop.closeDrawer}\r\n                 style={{ textDecoration: 'none', color: 'black' }}>\r\n            <MenuItem selected={prop.selected} className={prop.className}>\r\n                <ListItemIcon>{prop.icon}</ListItemIcon>\r\n                <ListItemText primary={prop.sidebarName} />\r\n            </MenuItem>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport const NavigationList = (props) => {\r\n    const activeRoute = (routeName) => {\r\n        return props.location.pathname === routeName;\r\n    }\r\n\r\n    const closeDrawer = () => {\r\n        props.toggleDrawer(false);\r\n    }\r\n\r\n    return (\r\n        <MenuList>\r\n            {\r\n                RoutesForDrawer.map((prop, key) => {\r\n                    return (prop.children.length > 0 ?\r\n                            <MenuItemCollapse key={key}\r\n                                              {...prop}\r\n                                              activeRoute={activeRoute}\r\n                                              closeDrawer={closeDrawer}/> :\r\n                            <MenuItemLink key={key}\r\n                                          {...prop}\r\n                                          selected={activeRoute(prop.route)}\r\n                                          closeDrawer={closeDrawer}/>\r\n                    )\r\n                })\r\n            }\r\n        </MenuList>\r\n    )\r\n}\r\n\r\nexport default NavigationList;\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Drawer, AppBar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NavigationList from \"../routes/Navigation\";\r\n\r\nconst useStyles = makeStyles(theme =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            textAlign: \"left\",\r\n            flexGrow: 1,\r\n        },\r\n        homeLink: {\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n        drawer: {\r\n            width: 300,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst NavigationBar = (props) => {\r\n    const classes = useStyles();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDrawer = (drawerState) => setIsOpen(drawerState);\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\"\r\n                                    className={classes.menuButton}\r\n                                    color=\"inherit\"\r\n                                    onClick={() => toggleDrawer(!isOpen)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            <a href=\"/\" className={classes.homeLink}>React</a>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Drawer classes={{ paper: classes.drawer }}\r\n                    open={isOpen}\r\n                    onClose={() => toggleDrawer(false)}>\r\n                <div className={classes.fullList}\r\n                     role=\"presentation\">\r\n                    <NavigationList {...props} toggleDrawer={toggleDrawer}/>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, {Component, Suspense} from \"react\"\r\nimport './App.css';\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\r\nimport {RoutesForRouter} from \"./routes/Routes\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#1e2438'\r\n        },\r\n    },\r\n});\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"App\">\r\n                    <div className=\"App\">\r\n                        <NavigationBar/>\r\n                        <Suspense fallback={null}>\r\n                            <Switch>\r\n                                {RoutesForRouter.map(route => (\r\n                                    <Route exact path={route.route} key={route.route} component={route.component}/>\r\n                                ))}\r\n                            </Switch>\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </MuiThemeProvider>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n","export const FormatNumber = (value, decimalPlaces) => {\r\n    return Number.parseFloat(value).toFixed(decimalPlaces);\r\n};\r\n","import * as XLSX from 'xlsx';\n\nclass ExcelService {\n\n  saveTimersToExcel = (timers, workBookTitle) => {\n    const wb = XLSX.utils.book_new();\n    timers.forEach(timer => {\n      const rowsNumberStringList = timer.rowsNumberList.map(value => String(value));\n      const ws = XLSX.utils.json_to_sheet([{}], {header: rowsNumberStringList});\n      timer.rowsNumberList.forEach((rowsNumber, x) => {\n        timer.timesList[rowsNumber].times.forEach((time, y) => {\n          XLSX.utils.sheet_add_json(ws, [{ rowsNumber: time }],\n            { skipHeader: true, origin: { r: y + 1 , c: x} });\n        });\n      });\n      XLSX.utils.book_append_sheet(wb, ws, timer.timerName);\n    });\n\n    XLSX.writeFile(wb, workBookTitle + '-BENCHMARK.xlsx');\n  }\n\n  savePageLoadingToExcel = (loadingTimes, workBookTitle) => {\n    const wb = XLSX.utils.book_new();\n\n    loadingTimes.forEach(times => {\n      const timerExcel = times.data.map((item, index) => {\n        return {\n          lp: index + 1,\n          time: item\n        };\n      });\n      timerExcel.push({ lp: 'average', time: this.getAverageTime(times.data)});\n      const ws = XLSX.utils.json_to_sheet(timerExcel);\n\n      XLSX.utils.book_append_sheet(wb, ws, times.title);\n    });\n\n    XLSX.writeFile(wb, workBookTitle + '-BENCHMARK.xlsx');\n  }\n\n  getAverageTime = (times) => {\n    const sum = times.reduce((a, b) => a + b);\n    return (sum / times.length);\n  }\n}\n\nexport default new ExcelService();\n"],"sourceRoot":""}