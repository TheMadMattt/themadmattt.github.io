{"version":3,"sources":["pages/Home/components/DisplayLoadingTimes.jsx","pages/Home/Home.jsx","utils/Timer.js","utils/DummyDataService.js","pages/LifecycleHooks/components/MatSelect.jsx","pages/LifecycleHooks/components/DummyDataList.jsx","utils/FormatNumber.js","components/DisplayTime.jsx","pages/LifecycleHooks/components/DisplayTimeList.jsx","pages/LifecycleHooks/LifecycleHooksBenchmark.jsx","pages/JSONPlaceholderBenchmark.jsx","pages/LocalApiBenchmark.jsx","routes/Routes.js","components/NavigationBar.jsx","App.jsx","index.js"],"names":["DisplayLoadingTimes","title","times","className","map","time","index","fcpTitle","lcpTitle","ttfbTitle","pageLoadingTitle","Home","props","reloadsCount","timer","state","fid","fcp","lcp","ttfb","pageLoaded","pageLoadedList","fcpList","lcpList","clsList","ttfbList","localStorage","getItem","getTTFB","entries","duration","JSON","parse","push","value","setItem","stringify","setState","getFCP","getLCP","this","setTimeout","reload","clearTimeout","clearLocalStorage","clear","toString","window","location","Button","variant","color","onClick","runBenchmark","Component","Timer","timerName","startTime","endTime","totalTime","averageTime","performance","now","length","getAverageTime","sum","reduce","a","b","adjectives","colors","nouns","random","max","Math","round","buildData","count","Array","fill","_","buildOneItem","id","description","completed","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","MatSelect","rowsNumber","handleChange","classes","FormControl","InputLabel","Select","onChange","label","rows","MenuItem","DummyDataItem","memo","DummyDataList","dummyData","data","key","FormatNumber","decimalPlaces","Number","parseFloat","toFixed","displayTimeContainer","padding","textAlign","border","timeContainer","marginBottom","DisplayTime","useState","open","setOpen","handleDialog","onClose","Badge","badgeContent","TimeList","List","ListItem","usePadding","TimeListDialog","Dialog","DialogTitle","DisplayTimeList","displayTimeList","createTimer","updateAllTimer","appendTimer","deleteAllTimer","selectRandomTimer","updateRandomTimer","removeRandomTimer","displayTime","LifecycleHooksBenchmark","isCreating","isAppending","deleteRandomTimer","selectedDummyData","startTimer","stopTimer","newData","slice","i","r","prevState","concat","selected","selectedDummyItem","selectedItem","e","handleRowsNumberChange","target","createRows","updateAllRows","appendRows","removeAllRows","selectRandomRow","disabled","updateRandomRow","removeRandomRow","JSONPlaceholderBenchmark","LocalApiBenchmark","Routes","sidebarName","component","path","icon","children","createStyles","root","flexGrow","menuButton","marginRight","homeLink","textDecoration","drawer","width","fullList","withRouter","isOpen","setIsOpen","toggleDrawer","drawerState","AppBar","position","Toolbar","IconButton","edge","Typography","href","Drawer","paper","role","MenuList","prop","to","style","routeName","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","main","App","route","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a69e36b4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const DisplayLoadingTimes = ({title, times}) => {\r\n    return (\r\n        <div>\r\n            <p><b>{ title }</b></p>\r\n            <ul className=\"loading-metrics-box\">\r\n                {times.map((time, index) => <li key={index}>{time} ms</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./Home.css\"\r\nimport { getFCP, getLCP, getTTFB } from 'web-vitals';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {DisplayLoadingTimes} from \"./components/DisplayLoadingTimes\";\r\n\r\nconst fcpTitle = \"First Contentful Paint (FCP)\";\r\nconst lcpTitle = \"Largest Contentful Paint (LCP)\";\r\nconst ttfbTitle = \"Time To First Byte (TTFB)\";\r\nconst pageLoadingTitle = \"Page loading time\";\r\n\r\nclass Home extends Component {\r\n    reloadsCount = 0;\r\n    timer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fid: 0,\r\n            fcp: 0,\r\n            lcp: 0,\r\n            ttfb: 0,\r\n            pageLoaded: 0,\r\n            pageLoadedList: [],\r\n            fcpList: [],\r\n            lcpList: [],\r\n            clsList: [],\r\n            ttfbList: []\r\n        }\r\n        this.reloadsCount = +localStorage.getItem(\"reloadsCounter\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        getTTFB(ttfb => {\r\n            const perfData = ttfb.entries[0];\r\n            const pageLoaded = perfData.duration;\r\n            let pageLoadedList = JSON.parse(localStorage.getItem(\"pageLoaded_react\"));\r\n            let ttfbList = JSON.parse(localStorage.getItem(\"ttfb_react\"));\r\n            if (pageLoadedList === null) {\r\n                pageLoadedList = [];\r\n            }\r\n            if (ttfbList === null) {\r\n                ttfbList = [];\r\n            }\r\n            pageLoadedList.push(pageLoaded);\r\n            ttfbList.push(ttfb.value)\r\n            localStorage.setItem(\"pageLoaded_react\", JSON.stringify(pageLoadedList));\r\n            localStorage.setItem(\"ttfb_react\", JSON.stringify(ttfbList));\r\n            this.setState({ttfb, pageLoaded, pageLoadedList, ttfbList});\r\n        });\r\n        getFCP(fcp => {\r\n            let fcpList = JSON.parse(localStorage.getItem(\"fcp_react\"));\r\n            if (fcpList === null) {\r\n                fcpList = [];\r\n            }\r\n            fcpList.push(fcp.value);\r\n            localStorage.setItem(\"fcp_react\", JSON.stringify(fcpList));\r\n            this.setState({fcp, fcpList});\r\n        }, true);\r\n        getLCP(lcp => {\r\n            let lcpList = JSON.parse(localStorage.getItem(\"lcp_react\"));\r\n            if (lcpList === null) {\r\n                lcpList = [];\r\n            }\r\n            lcpList.push(lcp.value);\r\n            localStorage.setItem(\"lcp_react\", JSON.stringify(lcpList));\r\n            this.setState({lcp, lcpList});\r\n        }, true);\r\n        this.timer = setTimeout(() => this.reload(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    runBenchmark() {\r\n        this.reloadsCount = 5;\r\n        this.clearLocalStorage();\r\n        this.reload();\r\n    }\r\n\r\n    clearLocalStorage() {\r\n        localStorage.clear();\r\n        this.setState({ fcpList: [], lcpList: [], ttfbList: [], pageLoadedList: []});\r\n    }\r\n\r\n    reload() {\r\n        if(this.reloadsCount > 0) {\r\n            localStorage.setItem(\"reloadsCounter\", (--this.reloadsCount).toString());\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home flex-column\">\r\n                <div>\r\n                    <p><b>{fcpTitle}:</b> {this.state.fcp.value} ms</p>\r\n                    <p><b>{lcpTitle}:</b> {this.state.lcp.value} ms</p>\r\n                    <p><b>{ttfbTitle}:</b> {this.state.ttfb.value} ms</p>\r\n                    <p><b>{pageLoadingTitle}:</b> {this.state.pageLoaded } ms</p>\r\n                </div>\r\n                <div className=\"flex-row flex-center\">\r\n                    <DisplayLoadingTimes title={fcpTitle} times={this.state.fcpList}/>\r\n                    <DisplayLoadingTimes title={lcpTitle} times={this.state.lcpList}/>\r\n                    <DisplayLoadingTimes title={ttfbTitle} times={this.state.ttfbList}/>\r\n                    <DisplayLoadingTimes title={pageLoadingTitle} times={this.state.pageLoadedList}/>\r\n                </div>\r\n                <div className=\"ButtonMargin\">\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Run benchmark</Button>\r\n\r\n                    <Button variant=\"contained\"\r\n                            className=\"red-btn\"\r\n                            onClick={() => this.clearLocalStorage()}>Clear local storage</Button>\r\n\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Save to excel</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export default class Timer {\r\n  timerName = '';\r\n  startTime = 0;\r\n  endTime = 0;\r\n  totalTime = 0;\r\n  times = [];\r\n  averageTime = 0;\r\n\r\n  constructor(timerName) {\r\n    this.timerName = timerName;\r\n  }\r\n\r\n  startTimer() {\r\n    this.startTime = performance.now();\r\n  }\r\n\r\n  stopTimer() {\r\n    if (this.startTime !== 0) {\r\n      this.endTime = performance.now();\r\n      this.totalTime = this.endTime - this.startTime;\r\n      this.times.push(this.totalTime);\r\n      if (this.times.length > 2) {\r\n        this.getAverageTime();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAverageTime() {\r\n    const sum = this.times.reduce((a, b) => a + b);\r\n    this.averageTime = (sum / this.times.length);\r\n    return this.averageTime;\r\n  }\r\n\r\n  clear() {\r\n    this.startTime = 0;\r\n    this.endTime = 0;\r\n    this.totalTime = 0;\r\n    this.times = [];\r\n    this.averageTime = 0;\r\n  }\r\n}\r\n","const adjectives = [\r\n  'bad', 'best', 'better', 'big', 'certain', 'clear', 'different', 'early', 'easy', 'economic', 'federal', 'free',\r\n  'full', 'good', 'great', 'hard', 'high', 'human', 'important', 'international', 'large', 'late', 'little', 'local',\r\n  'long', 'low', 'major', 'military', 'national', 'new', 'old', 'only', 'other', 'political', 'possible', 'public',\r\n  'real', 'recent', 'right', 'small', 'social', 'special', 'strong', 'sure', 'true', 'white', 'whole', 'young',\r\n  'crazy', 'helpful', 'mushy'\r\n];\r\n\r\nconst colors = [\r\n  'red', 'yellow', 'blue', 'green', 'pink', 'brown', 'purple', 'brown', 'white', 'black', 'orange'\r\n];\r\n\r\nconst nouns = [\r\n  'area', 'book', 'business', 'case', 'child', 'company', 'country', 'day', 'eye', 'fact', 'family', 'government',\r\n  'group', 'hand', 'home', 'job', 'life', 'lot', 'man', 'money', 'month', 'mother', 'Mr', 'night', 'number', 'part',\r\n  'people', 'place', 'point', 'problem', 'program', 'question', 'right', 'room', 'school', 'state', 'story',\r\n  'student', 'study', 'system', 'thing', 'time', 'water', 'way', 'week', 'woman', 'word', 'work', 'world', 'year'\r\n];\r\n\r\nexport const random = (max) => {\r\n  return Math.round(Math.random() * 1000) % max;\r\n}\r\n\r\nexport const buildData = (count) => {\r\n  return Array(count).fill(1).map((_, index) => {\r\n    return buildOneItem(index);\r\n  });\r\n}\r\n\r\nexport const buildOneItem = (id) => {\r\n  const title = nouns[random(nouns.length)];\r\n  const desc = `${adjectives[random(adjectives.length)]} ${colors[random(colors.length)]} ${nouns[random(nouns.length)]}`\r\n  const completed = false;\r\n  return {\r\n    id,\r\n    title,\r\n    description: desc,\r\n    completed\r\n  }\r\n}\r\n","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nexport const MatSelect = ({rowsNumber, handleChange}) => {\r\n    const classes = useStyles();\r\n    const rowsNumberList = [1000, 2000, 5000, 10000];\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>Row number</InputLabel>\r\n            <Select\r\n                value={rowsNumber}\r\n                onChange={handleChange}\r\n                label=\"Row number\"\r\n            >\r\n                {rowsNumberList.map((rows, index) =>\r\n                    <MenuItem key={index} value={rows}>{rows}</MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React, {memo} from 'react';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst DummyDataItem = memo(({ id, title, description, completed }) => (\r\n        <tr>\r\n            <td>{ id }</td>\r\n            <td>{ title }</td>\r\n            <td>{ description }</td>\r\n            <td>{ completed ? <DoneIcon/> : <ClearIcon/> }</td>\r\n        </tr>\r\n));\r\n\r\nconst DummyDataList = (props) => {\r\n    return (\r\n        <div className=\"data-table\">\r\n            <table>\r\n                <tbody>\r\n                {props.dummyData.map((data, index) =>\r\n                    <DummyDataItem {...data} key={index} />\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DummyDataList;\r\n","export const FormatNumber = (value, decimalPlaces) => {\r\n    return Number.parseFloat(value).toFixed(decimalPlaces);\r\n};\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Badge, Button, Dialog, DialogTitle, List, ListItem} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {FormatNumber} from \"../utils/FormatNumber\";\r\n\r\nconst useStyles = makeStyles({\r\n    displayTimeContainer: {\r\n        padding: \"10px\",\r\n        textAlign: \"center\",\r\n        border: \"2px solid black\",\r\n        margin: \"5px\"\r\n    },\r\n    timeContainer: {\r\n        marginBottom: \"15px\"\r\n    }\r\n});\r\n\r\nconst decimalPlaces = 5;\r\n\r\nexport const DisplayTime = ({title, timer}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const time = timer && (timer.averageTime > 0 ? timer.averageTime : timer.totalTime);\r\n\r\n    const handleDialog = (value) => {\r\n        setOpen(value);\r\n    };\r\n\r\n    const props = { onClose: handleDialog, open, timer, title }\r\n\r\n    return (\r\n        <div className={classes.displayTimeContainer}>\r\n            <div className={classes.timeContainer}>\r\n                <h3><strong>{title}</strong></h3>\r\n                {timer ? FormatNumber(time, decimalPlaces) : 0 } ms\r\n            </div>\r\n            <Badge color=\"secondary\" badgeContent={timer && timer.times.length}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => handleDialog(true)}>CLICK</Button>\r\n            </Badge>\r\n            <TimeListDialog {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeList = ({times}) => (\r\n    <List>\r\n        {times.map((time, index) => (\r\n            <ListItem key={index}>{ FormatNumber(time, decimalPlaces) } ms</ListItem>\r\n        ))}\r\n    </List>\r\n)\r\n\r\nconst usePadding = makeStyles({\r\n    padding: {\r\n        padding: \"15px\"\r\n    }\r\n})\r\n\r\nconst TimeListDialog = (props) => {\r\n    const { onClose, open, timer, title } = props;\r\n\r\n    const classes = usePadding();\r\n\r\n    const handleClose = () => {\r\n        onClose(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <div className={`flex-column flex-center ${classes.padding}`}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <p><b>Average time: </b>{timer ? FormatNumber(timer.averageTime, decimalPlaces) : '0'} ms</p>\r\n                {\r\n                    timer ? <TimeList times={timer.times}/> : <p>No times to show.</p>\r\n                }\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import {DisplayTime} from \"../../../components/DisplayTime\";\r\nimport React from \"react\";\r\n\r\nconst DisplayTimeList = (props) => {\r\n    const displayTimeList = [\r\n        {\r\n            title: \"Creating \" + props.rowsNumber + \" rows\",\r\n            timer: props.createTimer\r\n        },\r\n        {\r\n            title: \"Update \" + props.rowsNumber + \" rows\",\r\n            timer: props.updateAllTimer\r\n        },\r\n        {\r\n            title: \"Appending 1000 rows\",\r\n            timer: props.appendTimer\r\n        },\r\n        {\r\n            title: \"Removing \" + props.rowsNumber + \" rows\",\r\n            timer: props.deleteAllTimer\r\n        },\r\n        {\r\n            title: \"Selecting random row\",\r\n            timer: props.selectRandomTimer\r\n        },\r\n        {\r\n            title: \"Updating random row\",\r\n            timer: props.updateRandomTimer\r\n        },\r\n        {\r\n            title: \"Removing random row\",\r\n            timer: props.removeRandomTimer\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {\r\n                displayTimeList.map((displayTime, index) =>\r\n                    <DisplayTime key={index} {...displayTime}/>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayTimeList;\r\n","import React, {Component} from \"react\";\r\nimport Timer from \"../../utils/Timer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {buildData, random} from \"../../utils/DummyDataService\";\r\nimport \"./LifecycleHooks.css\";\r\nimport {MatSelect} from \"./components/MatSelect\";\r\nimport DummyDataList from \"./components/DummyDataList\";\r\nimport DisplayTimeList from \"./components/DisplayTimeList\";\r\n\r\nexport default class LifecycleHooksBenchmark extends Component {\r\n    isCreating = false;\r\n    isAppending = false;\r\n    createTimer = new Timer('createDummyData');\r\n    updateAllTimer = new Timer('updateAllRowsTimer')\r\n    appendTimer = new Timer('appendDummyData');\r\n    deleteAllTimer = new Timer('deleteAllDummyData');\r\n    selectRandomTimer = new Timer('selectRandomRowTimer');\r\n    updateRandomTimer = new Timer('updateRandomRowTimer');\r\n    deleteRandomTimer = new Timer('deleteRandomTimer');\r\n\r\n    state = {\r\n        dummyData: [],\r\n        selectedDummyData: null,\r\n        rowsNumber: 1000,\r\n        createTimer: null,\r\n        appendTimer: null,\r\n        deleteAllTimer: null,\r\n        updateAllTimer: null,\r\n        selectRandomTimer: null,\r\n        updateRandomTimer: null,\r\n        deleteRandomTimer: null\r\n    };\r\n\r\n    createRows() {\r\n        this.setState({dummyData: []}, () => {\r\n            this.createTimer.startTimer();\r\n            this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n                this.createTimer.stopTimer();\r\n                this.setState({createTimer: this.createTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    updateAllRows() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            this.updateAllTimer.startTimer();\r\n            const newData = this.state.dummyData.slice(0);\r\n\r\n            for (let i = 0; i < newData.length; i++) {\r\n                const r = newData[i];\r\n\r\n                newData[i] = {\r\n                    id: r.id,\r\n                    title: r.title + \" UPDATED\",\r\n                    description: r.description + \" UPDATED\",\r\n                    completed: !r.completed\r\n                };\r\n            }\r\n            this.setState({dummyData: newData}, () => {\r\n                this.updateAllTimer.stopTimer();\r\n                this.setState({updateAllTimer: this.updateAllTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    appendRows() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            this.appendTimer.startTimer();\r\n            this.setState(prevState => ({\r\n                dummyData: prevState.dummyData.concat(buildData(1000))\r\n            }), () => {\r\n                this.appendTimer.stopTimer();\r\n                this.setState({appendTimer: this.appendTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    removeAllRows() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            this.deleteAllTimer.startTimer();\r\n            this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n                this.deleteAllTimer.stopTimer();\r\n                this.setState({deleteAllTimer: this.deleteAllTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    selectRandomRow() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            const data = this.state.dummyData\r\n            this.selectRandomTimer.startTimer();\r\n            const id = random(data.length);\r\n            const selected = data[id];\r\n            this.setState({selectedDummyData: selected}, () => {\r\n                this.selectRandomTimer.stopTimer();\r\n                this.setState({selectRandomTimer: this.selectRandomTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    updateRandomRow() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            let data = this.state.dummyData\r\n            this.updateRandomTimer.startTimer();\r\n            const id = random(data.length);\r\n            const selectedDummyItem = data[id];\r\n            selectedDummyItem.title += \" UPDATED\";\r\n            selectedDummyItem.description += \" UPDATED\";\r\n\r\n            data[id] = selectedDummyItem;\r\n\r\n            this.setState({dummyData: data}, () => {\r\n                this.updateRandomTimer.stopTimer();\r\n                this.setState({updateRandomTimer: this.updateRandomTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    removeRandomRow() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            const data = this.state.dummyData\r\n            this.deleteRandomTimer.startTimer();\r\n            const id = random(data.length);\r\n\r\n\r\n            this.setState({ dummyData: [...data.slice(0, id), ...data.slice(id + 1)] }, () => {\r\n                this.deleteRandomTimer.stopTimer();\r\n                this.setState({updateRandomTimer: this.updateRandomTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    handleRowsNumberChange(rowsNumber) {\r\n        this.setState({rowsNumber});\r\n    }\r\n\r\n    clear() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const selectedItem = this.state.selectedDummyData;\r\n        return (\r\n            <div>\r\n                <div className=\"actions\">\r\n                    <div>\r\n                        <MatSelect rowsNumber={this.state.rowsNumber}\r\n                                   handleChange={(e) => this.handleRowsNumberChange(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"flex-row operations\">\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.createRows()}>Create {this.state.rowsNumber} rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.updateAllRows()}>Update {this.state.rowsNumber} rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.appendRows()}>Append 1000 rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.removeAllRows()}>Remove all rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.selectRandomRow()}\r\n                                disabled={this.state.dummyData.length <= 0}>Select random row</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.updateRandomRow()}\r\n                                disabled={this.state.dummyData.length <= 0}>Update random row</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.removeRandomRow()}\r\n                                disabled={this.state.dummyData.length <= 0}>Remove random row</Button>\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                                onClick={() => this.clear()}>Clear</Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"result-container\">\r\n                    <DisplayTimeList {...this.state}/>\r\n                </div>\r\n                <div>\r\n                    {selectedItem &&\r\n                    <p><b>Selected item:</b> {selectedItem.id} | {selectedItem.title} | {selectedItem.description}</p>}\r\n                </div>\r\n                <DummyDataList dummyData={this.state.dummyData}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class JSONPlaceholderBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>JSONPlaceholderBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class LocalApiBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>LocalApiBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import HomeIcon from '@material-ui/icons/Home';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport Home from \"../pages/Home/Home\";\r\nimport LifecycleHooksBenchmark from \"../pages/LifecycleHooks/LifecycleHooksBenchmark\";\r\nimport JSONPlaceholderBenchmark from \"../pages/JSONPlaceholderBenchmark\";\r\nimport LocalApiBenchmark from \"../pages/LocalApiBenchmark\";\r\n\r\nconst Routes = [\r\n    {\r\n        sidebarName: 'Home',\r\n        component: Home,\r\n        path: '/',\r\n        icon: <HomeIcon/>,\r\n        children: [],\r\n    },\r\n    {\r\n        sidebarName: 'Lifecycle hooks benchmark',\r\n        component: LifecycleHooksBenchmark,\r\n        path: '/benchmarks/lifecycle-crud',\r\n        icon: <SpeedIcon/>,\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'REST API benchmark',\r\n        component: null,\r\n        path: '',\r\n        icon: <SpeedIcon/>,\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: '{JSON} Placeholder',\r\n        component: JSONPlaceholderBenchmark,\r\n        path: '/benchmarks/json-placeholder',\r\n        icon: <PublicIcon/>,\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Local API server',\r\n        component: LocalApiBenchmark,\r\n        path: '/benchmarks/local-rest-api',\r\n        icon: <PublicIcon/>,\r\n        children: []\r\n    }\r\n];\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Drawer, AppBar, MenuList, MenuItem, ListItemText, ListItemIcon\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Routes from \"../routes/Routes\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            textAlign: \"left\",\r\n            flexGrow: 1,\r\n        },\r\n        homeLink: {\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n        drawer: {\r\n            width: 300,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst NavigationBar = (props) => {\r\n    const classes = useStyles();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDrawer = (drawerState) => setIsOpen(drawerState);\r\n\r\n    const activeRoute = (routeName) => {\r\n        return props.location.pathname === routeName ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\"\r\n                                    className={classes.menuButton}\r\n                                    color=\"inherit\"\r\n                                    onClick={() => toggleDrawer(!isOpen)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            <a href=\"/\" className={classes.homeLink}>React</a>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Drawer classes={{ paper: classes.drawer }}\r\n                    open={isOpen}\r\n                    onClose={() => toggleDrawer(false)}>\r\n                <div className={classes.fullList}\r\n                     role=\"presentation\"\r\n                     onClick={() => toggleDrawer(false)}>\r\n                    <MenuList>\r\n                        {Routes.map((prop, key) => {\r\n                            return (\r\n                                <NavLink to={prop.path}\r\n                                         style={{ textDecoration: 'none', color: 'black' }}\r\n                                         key={key}>\r\n                                    <MenuItem selected={activeRoute(prop.path)}>\r\n                                        <ListItemIcon>{prop.icon}</ListItemIcon>\r\n                                        <ListItemText primary={prop.sidebarName} />\r\n                                    </MenuItem>\r\n                                </NavLink>\r\n                            );\r\n                        })}\r\n                    </MenuList>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, {Component} from \"react\"\nimport './App.css';\nimport NavigationBar from \"./components/NavigationBar\";\nimport Routes from \"./routes/Routes\";\nimport {Switch, Route} from \"react-router-dom\"\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1e2438'\n        },\n\n    },\n});\n\nclass App extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <div className=\"App\">\n                        <NavigationBar/>\n                        <Switch>\n                            {Routes.map(route => (\n                                route.component &&\n                                <Route exact path={route.path} key={route.path} component={route.component}/>\n                            ))}\n                        </Switch>\n                    </div>\n                </div>\n            </MuiThemeProvider>\n\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}