{"version":3,"sources":["utils/Timer.js","components/MatSelect.jsx","components/DisplayTime.jsx","utils/ExcelService.js","api/LocalServerApi.js","pages/LocalApi/components/TaskList.jsx","pages/LocalApi/components/DisplayTimesLocalApi.jsx","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","pages/LocalApi/components/TaskForm.jsx","pages/LocalApi/components/TaskBtn.jsx","pages/LocalApi/components/TaskOperations.jsx","pages/LocalApi/LocalApiBenchmark.jsx"],"names":["Timer","timerName","startTime","endTime","timesList","rowsNumber","rowsNumberList","setRowsNumber","rowsCount","addRowsNumberBenchmark","startTimer","performance","now","stopTimer","totalTime","times","push","length","getAverageTime","find","item","averageTime","sum","reduce","a","b","clear","this","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","marginBottom","MatSelect","name","title","initialValue","selectDropdownList","handleChange","classes","variant","className","value","onChange","MenuProps","disableScrollLock","label","map","rows","index","displayTimeContainer","padding","textAlign","border","timeContainer","DisplayTime","timer","useState","open","setOpen","time","handleDialog","props","onClose","FormatNumber","color","badgeContent","onClick","TimeListDialog","TimeList","usePadding","saveTimersToExcel","timers","workBookTitle","wb","XLSX","book_new","forEach","rowsNumberStringList","String","ws","json_to_sheet","header","x","y","sheet_add_json","skipHeader","origin","r","c","book_append_sheet","savePageLoadingToExcel","loadingTimes","timerExcel","data","lp","http","axios","create","baseURL","headers","apiUrl","taskCount","get","task","post","put","id","delete","TaskItem","memo","description","completed","Button","TaskList","tasks","key","DisplayTimesLocalApi","displayTimeList","addTaskTimer","updateTaskTimer","getTaskTimer","deleteTaskTimer","getTasksTimer","renderTimer","displayTime","FormControlLabel","React","ref","checked","control","disabledProp","disabled","inputRef","_props$labelPlacement","labelPlacement","other","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","position","opacity","width","height","top","left","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","TaskForm","onDialogClose","isEditing","selectedTask","values","setValues","errors","setErrors","validate","fieldValues","temp","handleInputValue","e","controlValue","formValues","formIsValid","Object","every","useFormControls","formSubmitted","success","onSubmit","preventDefault","TextField","error","helperText","multiline","useDialogStyles","TaskFormDialog","Dialog","DialogTitle","TaskBtn","cb","taskId","setSelectedTask","apiService","getTask","then","TaskOperations","setTaskId","style","getTaskError","message","addTask","updateTask","getSelectedTask","deleteTask","getTasks","startIcon","saveTimesToExcel","greenBtn","createMuiTheme","green","taskNumberList","LocalApiBenchmark","localApiUrl","isConnected","connectionError","connect","response","status","setState","catch","disconnect","createTask","window","location","reload","setTimersRowsNumber","excelService","body","Component"],"mappings":"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","file":"static/js/7.d223dcb2.chunk.js","sourcesContent":["export default class Timer {\r\n  timerName = '';\r\n  startTime = 0;\r\n  endTime = 0;\r\n  timesList = {};\r\n  rowsNumber = 0;\r\n  rowsNumberList = [];\r\n\r\n  constructor(timerName) {\r\n    this.timerName = timerName;\r\n  }\r\n\r\n  setRowsNumber = (rowsCount) => {\r\n    this.rowsNumber = rowsCount;\r\n    this.addRowsNumberBenchmark(rowsCount);\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.startTime = performance.now();\r\n  }\r\n\r\n  stopTimer = () =>  {\r\n    if (this.startTime !== 0) {\r\n      this.endTime = performance.now();\r\n      const totalTime = this.endTime - this.startTime;\r\n      this.timesList[this.rowsNumber].times.push(totalTime);\r\n      this.timesList[this.rowsNumber].totalTime = totalTime;\r\n      if (this.timesList[this.rowsNumber].times.length > 2) {\r\n        this.getAverageTime();\r\n      }\r\n    }\r\n  }\r\n\r\n  addRowsNumberBenchmark = (rowsCount) => {\r\n    const exist = this.rowsNumberList.find(item => item === rowsCount);\r\n    if (!exist) {\r\n      this.rowsNumberList.push(rowsCount);\r\n      this.timesList[rowsCount] = { times: [], averageTime: 0, totalTime: 0};\r\n    }\r\n  }\r\n\r\n  getAverageTime = () =>  {\r\n    const times = this.timesList[this.rowsNumber].times;\r\n    const sum = times.reduce((a, b) => a + b);\r\n    this.timesList[this.rowsNumber].averageTime = (sum / times.length);\r\n    return this.timesList[this.rowsNumber].averageTime;\r\n  }\r\n\r\n  clear = () => {\r\n    this.startTime = 0;\r\n    this.endTime = 0;\r\n    this.timesList = {};\r\n  }\r\n}\r\n","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 150,\r\n        marginBottom: \"20px\"\r\n    },\r\n}));\r\n\r\nexport const MatSelect = ({name, title, initialValue, selectDropdownList, handleChange}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>{title}</InputLabel>\r\n            <Select\r\n                name={name}\r\n                value={initialValue}\r\n                onChange={handleChange}\r\n                MenuProps={{\r\n                    disableScrollLock: true\r\n                }}\r\n                label={title}\r\n            >\r\n                {selectDropdownList.map((rows, index) =>\r\n                    <MenuItem key={index} value={rows}>{rows}</MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Badge, Dialog, DialogTitle, IconButton, List, ListItem} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {FormatNumber} from \"../utils/FormatNumber\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles({\r\n    displayTimeContainer: {\r\n        padding: \"0 10px\",\r\n        textAlign: \"center\",\r\n        border: \"2px solid black\",\r\n        margin: \"5px\"\r\n    },\r\n    timeContainer: {\r\n        marginBottom: \"15px\"\r\n    }\r\n});\r\n\r\nconst decimalPlaces = 5;\r\n\r\nexport const DisplayTime = ({title, timer}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const time = timer && (timer.timesList[timer.rowsNumber].averageTime > 0 ?\r\n        timer.timesList[timer.rowsNumber].averageTime :\r\n        timer.timesList[timer.rowsNumber].totalTime);\r\n\r\n    const handleDialog = (value) => {\r\n        setOpen(value);\r\n    };\r\n\r\n    const props = { onClose: handleDialog, open, timer, title }\r\n\r\n    return (\r\n        <div className={classes.displayTimeContainer}>\r\n            <div className={classes.timeContainer}>\r\n                <h3><strong>{title}</strong></h3>\r\n                {timer ? FormatNumber(time, decimalPlaces) : 0 } ms\r\n            </div>\r\n            <Badge color=\"secondary\" badgeContent={timer && timer.timesList[timer.rowsNumber].times.length}>\r\n                <IconButton variant=\"contained\" color=\"primary\" onClick={() => handleDialog(true)}>\r\n                    <ExpandMoreIcon/>\r\n                </IconButton>\r\n            </Badge>\r\n            <TimeListDialog {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeList = ({times}) => (\r\n    <List>\r\n        {times.map((time, index) => (\r\n            <ListItem key={index}>{ FormatNumber(time, decimalPlaces) } ms</ListItem>\r\n        ))}\r\n    </List>\r\n)\r\n\r\nconst usePadding = makeStyles({\r\n    padding: {\r\n        padding: \"0 15px 15px 15px\"\r\n    }\r\n})\r\n\r\nconst TimeListDialog = (props) => {\r\n    const { onClose, open, timer, title } = props;\r\n\r\n    const classes = usePadding();\r\n\r\n    return (\r\n        <Dialog onClose={() => onClose(false)} open={open}>\r\n            <div className={`flex-column flex-center ${classes.padding}`}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <p><b>Average time: </b>{timer ? FormatNumber(timer.timesList[timer.rowsNumber].averageTime, decimalPlaces) : '0'} ms</p>\r\n                {\r\n                    timer ? <TimeList times={timer.timesList[timer.rowsNumber].times}/> : <p>No times to show.</p>\r\n                }\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import * as XLSX from 'xlsx';\n\nclass ExcelService {\n\n  saveTimersToExcel = (timers, workBookTitle) => {\n    const wb = XLSX.utils.book_new();\n    timers.forEach(timer => {\n      const rowsNumberStringList = timer.rowsNumberList.map(value => String(value));\n      const ws = XLSX.utils.json_to_sheet([{}], {header: rowsNumberStringList});\n      timer.rowsNumberList.forEach((rowsNumber, x) => {\n        timer.timesList[rowsNumber].times.forEach((time, y) => {\n          XLSX.utils.sheet_add_json(ws, [{ rowsNumber: time }],\n            { skipHeader: true, origin: { r: y + 1 , c: x} });\n        });\n      });\n      XLSX.utils.book_append_sheet(wb, ws, timer.timerName);\n    });\n\n    XLSX.writeFile(wb, workBookTitle + '-BENCHMARK.xlsx');\n  }\n\n  savePageLoadingToExcel = (loadingTimes, workBookTitle) => {\n    const wb = XLSX.utils.book_new();\n\n    loadingTimes.forEach(times => {\n      const timerExcel = times.data.map((item, index) => {\n        return {\n          lp: index + 1,\n          time: item\n        };\n      });\n      timerExcel.push({ lp: 'average', time: this.getAverageTime(times.data)});\n      const ws = XLSX.utils.json_to_sheet(timerExcel);\n\n      XLSX.utils.book_append_sheet(wb, ws, times.title);\n    });\n\n    XLSX.writeFile(wb, workBookTitle + '-BENCHMARK.xlsx');\n  }\n\n  getAverageTime = (times) => {\n    const sum = times.reduce((a, b) => a + b);\n    return (sum / times.length);\n  }\n}\n\nexport default new ExcelService();\n","import axios from \"axios\";\r\n\r\nlet http = axios.create({\r\n    baseURL: \"https://localhost:44306/\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});\r\n\r\nclass LocalServerApi {\r\n    connect(apiUrl, taskCount) {\r\n        http = axios.create({\r\n            baseURL: apiUrl,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        return http.get(\"connect/\" + taskCount)\r\n    }\r\n\r\n\r\n    createTask(task) {\r\n        return http.post(\"task/\", task);\r\n    }\r\n\r\n    updateTask(task) {\r\n        return http.put(\"task/\" + task.id, task);\r\n    }\r\n\r\n    getTask(id) {\r\n        return http.get(\"task/\" + id);\r\n    }\r\n\r\n    deleteTask(id) {\r\n        return http.delete(\"task/\" + id);\r\n    }\r\n\r\n    getTasks() {\r\n        return http.get(\"task\")\r\n    }\r\n}\r\n\r\nexport default new LocalServerApi();\r\n","import React, {memo} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst TaskItem = memo(({ title, description, completed }) => (\r\n    <tr>\r\n        <td>\r\n            <h2>{ title }</h2>\r\n            <div>\r\n                <Button>Edit task</Button>\r\n                <Button>Delete task</Button>\r\n            </div>\r\n        </td>\r\n        <td>{ description }</td>\r\n        <td>{ completed }</td>\r\n    </tr>\r\n));\r\n\r\nconst TaskList = memo(({tasks}) => {\r\n    return (\r\n        <div className=\"data-table\">\r\n            <table>\r\n                <tbody>\r\n                    {tasks.map((data, index) =>\r\n                        <TaskItem {...data} key={index} />\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default TaskList;\r\n","import {DisplayTime} from \"../../../components/DisplayTime\";\r\nimport React from \"react\";\r\n\r\nconst DisplayTimesLocalApi = (props) => {\r\n    const displayTimeList = [\r\n        {\r\n            title: \"Adding task\",\r\n            timer: props.addTaskTimer\r\n        },\r\n        {\r\n            title: \"Updating task\",\r\n            timer: props.updateTaskTimer\r\n        },\r\n        {\r\n            title: 'Getting task',\r\n            timer: props.getTaskTimer\r\n        },\r\n        {\r\n            title: \"Removing task\",\r\n            timer: props.deleteTaskTimer\r\n        },\r\n        {\r\n            title: \"Getting tasks\",\r\n            timer: props.getTasksTimer\r\n        },\r\n        {\r\n            title: \"Rendering tasks\",\r\n            timer: props.renderTimer\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {\r\n                displayTimeList.map((displayTime, index) =>\r\n                    <DisplayTime key={index} {...displayTime}/>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayTimesLocalApi;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, {useState} from \"react\";\r\nimport {Button, Checkbox, Dialog, DialogTitle, FormControlLabel, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useFormControls = (initialValue) => {\r\n    const [values, setValues] = useState(initialValue);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n\r\n        if (\"title\" in fieldValues)\r\n            temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n\r\n        if (\"description\" in fieldValues) {\r\n            temp.description = fieldValues.description ? \"\" : \"This field is required.\"\r\n        }\r\n\r\n        setErrors({\r\n            ...temp\r\n        });\r\n    }\r\n    const handleInputValue = (e) => {\r\n        const control = e.target;\r\n        const { name } = control;\r\n        let controlValue;\r\n        if(control.type === \"checkbox\") {\r\n            const { checked } = control;\r\n            controlValue = checked;\r\n        } else {\r\n            const { value } = control;\r\n            controlValue = value;\r\n        }\r\n        setValues({\r\n            ...values,\r\n            [name]: controlValue\r\n        });\r\n        validate({ [name]: controlValue });\r\n    }\r\n    const formIsValid = (fieldValues = values) => {\r\n        validate();\r\n        return fieldValues.title &&\r\n            fieldValues.description &&\r\n            Object.values(errors).every((x) => x === \"\");\r\n    }\r\n    return {\r\n        handleInputValue,\r\n        formValues: values,\r\n        formIsValid,\r\n        errors\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: \"300px\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst TaskForm = ({onDialogClose, isEditing, selectedTask}) => {\r\n    const classes = useStyles();\r\n    const initialFormValues = {\r\n        id: isEditing? selectedTask.id : null,\r\n        title: isEditing ? selectedTask.title : \"\",\r\n        description: isEditing ? selectedTask.description : \"\",\r\n        completed: isEditing ? selectedTask.completed : false,\r\n        formSubmitted: false,\r\n        success: false\r\n    }\r\n\r\n    const { handleInputValue, formValues, errors, formIsValid} = useFormControls(initialFormValues);\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(formIsValid()) {\r\n            const task = {\r\n                id: isEditing ? formValues.id : 101,\r\n                title: formValues.title,\r\n                description: formValues.description,\r\n                completed: formValues.completed\r\n            }\r\n            onDialogClose(task);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-column flex-center\">\r\n            <form onSubmit={handleFormSubmit} className={'flex-column ' + classes.root}>\r\n                <TextField name=\"title\"\r\n                           value={formValues.title}\r\n                           variant=\"outlined\"\r\n                           onChange={handleInputValue}\r\n                           onBlur={handleInputValue}\r\n                           label=\"Title\"\r\n                           {...(errors[\"title\"] && { error: true, helperText: errors[\"title\"] })}/>\r\n                <TextField name=\"description\"\r\n                           value={formValues.description}\r\n                           variant=\"outlined\"\r\n                           multiline\r\n                           onChange={handleInputValue}\r\n                           onBlur={handleInputValue}\r\n                           label=\"Description\"\r\n                           rows=\"5\"\r\n                           {...(errors[\"description\"] && { error: true, helperText: errors[\"description\"] })}/>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox name=\"completed\"\r\n                                  checked={formValues.completed}\r\n                                  onChange={handleInputValue}/>\r\n                    }\r\n                    label=\"Is completed?\"\r\n                />\r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\">Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useDialogStyles = makeStyles({\r\n    padding: {\r\n        padding: \"0 15px 15px 15px\"\r\n    }\r\n})\r\n\r\nexport const TaskFormDialog = (props) => {\r\n    const { onClose, open, isEditing, selectedTask } = props;\r\n\r\n    const classes = useDialogStyles();\r\n\r\n    return (\r\n        <Dialog onClose={() => onClose(null)}\r\n                open={open}>\r\n            <DialogTitle>{isEditing ? 'Edit post' : 'Add post'}</DialogTitle>\r\n            <div className={`flex-column flex-center ${classes.padding}`}>\r\n                <TaskForm onDialogClose={(task) => onClose(task)} isEditing={isEditing} selectedTask={selectedTask}/>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport apiService from '../../../api/LocalServerApi';\r\nimport {TaskFormDialog} from \"./TaskForm\";\r\n\r\nexport const TaskBtn = ({cb, isEditing = false, taskId}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedTask, setSelectedTask] = useState({});\r\n\r\n    const handleDialogOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = (task) => {\r\n        setOpen(false);\r\n        if (task) {\r\n            cb(task);\r\n        }\r\n    }\r\n\r\n    const getTask = () => {\r\n        apiService.getTask(taskId).then(task => {\r\n            setSelectedTask(task.data);\r\n            setOpen(true);\r\n        });\r\n    }\r\n\r\n    const props = { onClose: handleDialogClose, open, isEditing, selectedTask}\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"ButtonMargin\"\r\n                    onClick={isEditing ? getTask : handleDialogOpen}>\r\n                {isEditing ? 'Edit task' : 'Add task'}\r\n            </Button>\r\n            <TaskFormDialog {...props} />\r\n        </>\r\n    )\r\n}\r\n","import {TaskBtn} from \"./TaskBtn\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst TaskOperations = (props) => {\r\n    const [taskId, setTaskId] = useState(1);\r\n\r\n    const handleInputValue = (e) => {\r\n        setTaskId(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"operations\">\r\n            <div className=\"flex-row\">\r\n                <TextField\r\n                    name=\"taskId\"\r\n                    label=\"Enter taskId\"\r\n                    variant=\"outlined\"\r\n                    value={taskId}\r\n                    onChange={handleInputValue}\r\n                    style={{marginBottom: \"15px\"}}\r\n                    error={props.getTaskError.error}\r\n                    helperText={props.getTaskError.error ? props.getTaskError.message : \"\"}\r\n                />\r\n            </div>\r\n            <div className=\"flex-row\">\r\n                <TaskBtn cb={(task) => props.addTask(task)}/>\r\n                <TaskBtn cb={(task) => props.updateTask(task)} isEditing taskId={taskId}/>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                        onClick={() => props.getSelectedTask(taskId)}>Get task</Button>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                        onClick={() => props.deleteTask(taskId)}>Delete task</Button>\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                        onClick={() => props.getTasks()}>Get {props.taskCount} tasks</Button>\r\n                <Button variant=\"contained\" color=\"default\" startIcon={<GetAppIcon />}\r\n                        onClick={() => props.saveTimesToExcel()}>\r\n                    Save times to excel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskOperations;\r\n","import React, {Component} from \"react\";\r\nimport Timer from \"../../utils/Timer\";\r\nimport \"./LocalApi.css\";\r\nimport apiService from '../../api/LocalServerApi';\r\nimport TaskList from \"./components/TaskList\";\r\nimport DisplayTimesLocalApi from \"./components/DisplayTimesLocalApi\";\r\nimport TaskOperations from \"./components/TaskOperations\";\r\nimport {Button, createMuiTheme, MuiThemeProvider, TextField} from \"@material-ui/core\";\r\nimport {MatSelect} from \"../../components/MatSelect\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport excelService from \"../../utils/ExcelService\";\r\n\r\nconst greenBtn = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n    },\r\n});\r\n\r\nconst taskNumberList = [1000, 2000, 5000, 10000];\r\n\r\nexport default class LocalApiBenchmark extends Component {\r\n    addTaskTimer = new Timer('addTaskTimer');\r\n    updateTaskTimer = new Timer('updateTaskTimer');\r\n    getTaskTimer = new Timer('getTaskTimer');\r\n    getTasksTimer = new Timer('getTasksTimer');\r\n    deleteTaskTimer = new Timer('deleteTaskTimer');\r\n    renderTimer = new Timer('renderTimer');\r\n\r\n    state = {\r\n        tasks: [],\r\n        localApiUrl: \"https://localhost:44306/\",\r\n        taskCount: 1000,\r\n        selectedTask: null,\r\n        addTaskTimer: null,\r\n        updateTaskTimer: null,\r\n        getTaskTimer: null,\r\n        getTasksTimer: null,\r\n        deleteTaskTimer: null,\r\n        renderTimer: null,\r\n        isConnected: false,\r\n        connectionError: {\r\n            error: false,\r\n            message: \"\"\r\n        },\r\n        getTaskError: {\r\n            error: false,\r\n            message: \"\"\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setTimersRowsNumber(this.state.taskCount);\r\n    }\r\n\r\n    connect = () => {\r\n        apiService.connect(this.state.localApiUrl, this.state.taskCount).then(response => {\r\n            if (response.status === 200) {\r\n                this.setState({isConnected: true, connectionError: { error: false }});\r\n            }\r\n        }).catch(() => {\r\n            this.setState({ connectionError: { error: true, message: \"Error connecting to api\"}})\r\n        });\r\n    }\r\n\r\n    disconnect = () => {\r\n        this.setState({isConnected: false, connectionError: { error: false }});\r\n    }\r\n\r\n    addTask = (task) => {\r\n        this.setState({ getTaskError: { error: false}})\r\n        this.addTaskTimer.startTimer();\r\n        apiService.createTask(task).then(() => {\r\n            this.addTaskTimer.stopTimer();\r\n            this.setState({addTaskTimer: this.addTaskTimer});\r\n        });\r\n    }\r\n\r\n    updateTask = (task) => {\r\n        this.setState({ getTaskError: { error: false}})\r\n        this.updateTaskTimer.startTimer();\r\n        apiService.updateTask(task).then(() => {\r\n            this.updateTaskTimer.stopTimer();\r\n            this.setState({updateTaskTimer: this.updateTaskTimer});\r\n        });\r\n    }\r\n\r\n    getSelectedTask = (taskId) => {\r\n        this.setState({ getTaskError: { error: false}})\r\n        this.getTaskTimer.startTimer();\r\n        apiService.getTask(taskId).then(task => {\r\n            this.getTaskTimer.stopTimer();\r\n            this.setState({selectedTask: task.data, getTaskTimer: this.getTaskTimer});\r\n        });\r\n    }\r\n\r\n    deleteTask = (taskId) => {\r\n        this.setState({ getTaskError: { error: false}})\r\n        this.deleteTaskTimer.startTimer();\r\n        apiService.deleteTask(taskId).then(() => {\r\n            this.deleteTaskTimer.stopTimer();\r\n            this.setState({deleteTaskTimer: this.deleteTaskTimer});\r\n        }).catch(() => {\r\n            this.setState({ getTaskError: { error: true, message: \"Task id not found\"}})\r\n        });\r\n    }\r\n\r\n    getTasks = () => {\r\n        this.setState({tasks: []}, () => {\r\n            this.getTasksTimer.startTimer();\r\n            apiService.getTasks().then(response => {\r\n                this.getTasksTimer.stopTimer();\r\n                this.renderTimer.startTimer();\r\n                this.setState({ tasks: response.data, getTasksTimer: this.getTasksTimer}, () => {\r\n                    this.renderTimer.stopTimer();\r\n                    this.setState({renderTimer: this.renderTimer});\r\n                });\r\n            })\r\n        })\r\n    }\r\n\r\n    clear = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    handleInputValue = (e) => {\r\n        const control = e.target;\r\n        const { name, value } = control;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    setTimersRowsNumber(rowsNumber) {\r\n        const timers = [this.addTaskTimer, this.updateTaskTimer, this.getTaskTimer,\r\n            this.deleteTaskTimer, this.getTasksTimer, this.renderTimer];\r\n\r\n        timers.forEach(timer => {\r\n            timer.setRowsNumber(rowsNumber);\r\n        })\r\n    }\r\n\r\n    saveTimesToExcel() {\r\n        const timers = [this.addTaskTimer, this.updateTaskTimer, this.getTaskTimer,\r\n            this.deleteTaskTimer, this.getTasksTimer, this.renderTimer];\r\n\r\n        excelService.saveTimersToExcel(timers, \"LOCAL-API-REACT\");\r\n    }\r\n\r\n    render() {\r\n        const selectedTask = this.state.selectedTask;\r\n        const isConnected = this.state.isConnected;\r\n        const connectionError = this.state.connectionError;\r\n        return (\r\n            <div className=\"local-api-container\">\r\n                <div className=\"actions\">\r\n                    <div className=\"flex-row flex-center\">\r\n                        <TextField\r\n                            name=\"localApiUrl\"\r\n                            label=\"Enter local server api url\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.localApiUrl}\r\n                            onChange={this.handleInputValue}\r\n                            style={{marginBottom: \"15px\"}}\r\n                            error={connectionError.error}\r\n                            helperText={connectionError.error ? connectionError.message : \"\"}\r\n                        />\r\n                        <MatSelect name=\"taskCount\"\r\n                                   title=\"Choose task count\"\r\n                                   initialValue={this.state.taskCount}\r\n                                   handleChange={this.handleInputValue}\r\n                                   selectDropdownList={taskNumberList}/>\r\n                        <MuiThemeProvider theme={greenBtn}>\r\n                            <Button variant=\"contained\" color=\"primary\"\r\n                                    onClick={this.connect}>Connect</Button>\r\n                        </MuiThemeProvider>\r\n                        <Button variant=\"contained\" color=\"secondary\"\r\n                                onClick={this.disconnect}>Disconnect</Button>\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                                onClick={() => this.clear()}>Clear</Button>\r\n                    </div>\r\n                    {\r\n                        isConnected && <TaskOperations taskCount={this.state.taskCount}\r\n                                                       addTask={this.addTask}\r\n                                                       updateTask={this.updateTask}\r\n                                                       getSelectedTask={this.getSelectedTask}\r\n                                                       deleteTask={this.deleteTask}\r\n                                                       getTasks={this.getTasks}\r\n                                                       saveTimesToExcel={this.saveTimesToExcel}\r\n                                                       getTaskError={this.state.getTaskError}/>\r\n                    }\r\n                </div>\r\n                <div className=\"result-container\">\r\n                    <DisplayTimesLocalApi {...this.state}/>\r\n                </div>\r\n                <div>\r\n                    {selectedTask &&\r\n                    <p><b>Selected task:</b> {selectedTask.id} | {selectedTask.title} | {selectedTask.body}</p>}\r\n                </div>\r\n                <TaskList tasks={this.state.tasks}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}