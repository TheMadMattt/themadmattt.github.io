{"version":3,"sources":["utils/Timer.js","components/MatSelect.jsx","components/DisplayTime.jsx","pages/JSONPlaceholder/components/DisplayTimesJSONPlaceholder.jsx","api/json-placeholder.service.js","pages/JSONPlaceholder/components/PostList.jsx","pages/JSONPlaceholder/components/PostForm.jsx","pages/JSONPlaceholder/components/PostBtn.jsx","pages/JSONPlaceholder/JSONPlaceholderBenchmark.jsx"],"names":["Timer","timerName","startTime","endTime","totalTime","times","averageTime","startTimer","performance","now","stopTimer","push","length","getAverageTime","sum","reduce","a","b","clear","this","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","marginBottom","MatSelect","title","initialValue","selectDropdownList","handleChange","classes","variant","className","value","onChange","MenuProps","disableScrollLock","label","map","rows","index","displayTimeContainer","padding","textAlign","border","timeContainer","DisplayTime","timer","useState","open","setOpen","time","handleDialog","props","onClose","FormatNumber","color","badgeContent","onClick","TimeListDialog","TimeList","usePadding","DisplayTimesJSONPlaceholder","displayTimeList","addPostTimer","updatePostTimer","getPostTimer","deletePostTimer","getPostsWithCommentsTimer","renderTimer","displayTime","http","axios","create","baseURL","headers","post","put","id","get","delete","all","getPosts","getComments","then","spread","response","posts","data","comments","filter","comment","postId","PostItem","memo","body","Button","email","PostList","key","root","width","PostForm","onDialogClose","isEditing","selectedPost","values","setValues","errors","setErrors","validate","fieldValues","temp","handleInputValue","e","target","name","formValues","formIsValid","Object","every","x","useFormControls","formSubmitted","success","onSubmit","preventDefault","TextField","onBlur","error","helperText","multiline","type","useDialogStyles","PostFormDialog","Dialog","DialogTitle","PostBtn","cb","setSelectedPost","apiService","getPost","arrayOfIds","Array","from","_","i","JSONPlaceholderBenchmark","state","createPost","setState","updatePost","getPostsWithComments","deletePost","rowsNumber","window","location","reload","handleRowsNumberChange","addPost","getSelectedPost","Component"],"mappings":"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","file":"static/js/6.7362abe3.chunk.js","sourcesContent":["export default class Timer {\r\n  timerName = '';\r\n  startTime = 0;\r\n  endTime = 0;\r\n  totalTime = 0;\r\n  times = [];\r\n  averageTime = 0;\r\n\r\n  constructor(timerName) {\r\n    this.timerName = timerName;\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.startTime = performance.now();\r\n  }\r\n\r\n  stopTimer = () => {\r\n    if (this.startTime !== 0) {\r\n      this.endTime = performance.now();\r\n      this.totalTime = this.endTime - this.startTime;\r\n      this.times.push(this.totalTime);\r\n      if (this.times.length > 2) {\r\n        this.getAverageTime();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAverageTime = () => {\r\n    const sum = this.times.reduce((a, b) => a + b);\r\n    this.averageTime = (sum / this.times.length);\r\n    return this.averageTime;\r\n  }\r\n\r\n  clear = () => {\r\n    this.startTime = 0;\r\n    this.endTime = 0;\r\n    this.totalTime = 0;\r\n    this.times = [];\r\n    this.averageTime = 0;\r\n  }\r\n}\r\n","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        marginBottom: \"20px\"\r\n    },\r\n}));\r\n\r\nexport const MatSelect = ({title, initialValue, selectDropdownList, handleChange}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>{title}</InputLabel>\r\n            <Select\r\n                value={initialValue}\r\n                onChange={handleChange}\r\n                MenuProps={{\r\n                    disableScrollLock: true\r\n                }}\r\n                label={title}\r\n            >\r\n                {selectDropdownList.map((rows, index) =>\r\n                    <MenuItem key={index} value={rows}>{rows}</MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Badge, Dialog, DialogTitle, IconButton, List, ListItem} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {FormatNumber} from \"../utils/FormatNumber\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles({\r\n    displayTimeContainer: {\r\n        padding: \"0 10px\",\r\n        textAlign: \"center\",\r\n        border: \"2px solid black\",\r\n        margin: \"5px\"\r\n    },\r\n    timeContainer: {\r\n        marginBottom: \"15px\"\r\n    }\r\n});\r\n\r\nconst decimalPlaces = 5;\r\n\r\nexport const DisplayTime = ({title, timer}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const time = timer && (timer.averageTime > 0 ? timer.averageTime : timer.totalTime);\r\n\r\n    const handleDialog = (value) => {\r\n        setOpen(value);\r\n    };\r\n\r\n    const props = { onClose: handleDialog, open, timer, title }\r\n\r\n    return (\r\n        <div className={classes.displayTimeContainer}>\r\n            <div className={classes.timeContainer}>\r\n                <h3><strong>{title}</strong></h3>\r\n                {timer ? FormatNumber(time, decimalPlaces) : 0 } ms\r\n            </div>\r\n            <Badge color=\"secondary\" badgeContent={timer && timer.times.length}>\r\n                <IconButton variant=\"contained\" color=\"primary\" onClick={() => handleDialog(true)}>\r\n                    <ExpandMoreIcon/>\r\n                </IconButton>\r\n            </Badge>\r\n            <TimeListDialog {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeList = ({times}) => (\r\n    <List>\r\n        {times.map((time, index) => (\r\n            <ListItem key={index}>{ FormatNumber(time, decimalPlaces) } ms</ListItem>\r\n        ))}\r\n    </List>\r\n)\r\n\r\nconst usePadding = makeStyles({\r\n    padding: {\r\n        padding: \"0 15px 15px 15px\"\r\n    }\r\n})\r\n\r\nconst TimeListDialog = (props) => {\r\n    const { onClose, open, timer, title } = props;\r\n\r\n    const classes = usePadding();\r\n\r\n    return (\r\n        <Dialog onClose={() => onClose(false)} open={open}>\r\n            <div className={`flex-column flex-center ${classes.padding}`}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <p><b>Average time: </b>{timer ? FormatNumber(timer.averageTime, decimalPlaces) : '0'} ms</p>\r\n                {\r\n                    timer ? <TimeList times={timer.times}/> : <p>No times to show.</p>\r\n                }\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import {DisplayTime} from \"../../../components/DisplayTime\";\r\nimport React from \"react\";\r\n\r\nconst DisplayTimesJSONPlaceholder = (props) => {\r\n    const displayTimeList = [\r\n        {\r\n            title: \"Adding post\",\r\n            timer: props.addPostTimer\r\n        },\r\n        {\r\n            title: \"Updating post\",\r\n            timer: props.updatePostTimer\r\n        },\r\n        {\r\n            title: 'Getting post',\r\n            timer: props.getPostTimer\r\n        },\r\n        {\r\n            title: \"Removing post\",\r\n            timer: props.deletePostTimer\r\n        },\r\n        {\r\n            title: \"Getting posts with comments\",\r\n            timer: props.getPostsWithCommentsTimer\r\n        },\r\n        {\r\n            title: \"Rendering 100 posts\",\r\n            timer: props.renderTimer\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {\r\n                displayTimeList.map((displayTime, index) =>\r\n                    <DisplayTime key={index} {...displayTime}/>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayTimesJSONPlaceholder;\r\n","import axios from \"axios\";\r\n\r\nconst http = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});\r\n\r\nclass JsonPlaceholderService {\r\n    createPost(post) {\r\n        return http.post(\"posts\", post);\r\n    }\r\n\r\n    updatePost(post) {\r\n        return http.put(\"posts/\" + post.id, post);\r\n    }\r\n\r\n    getPost(id) {\r\n        return http.get(\"posts/\" + id);\r\n    }\r\n\r\n    deletePost(id) {\r\n        return http.delete(\"posts/\" + id);\r\n    }\r\n\r\n    getPosts() {\r\n        return http.get(\"posts\")\r\n    }\r\n\r\n    getComments() {\r\n        return http.get(\"comments\")\r\n    }\r\n\r\n    getPostsWithComments() {\r\n        return axios.all([this.getPosts(), this.getComments()]).then(axios.spread((...response) => {\r\n            const posts = response[0].data;\r\n            const comments = response[1].data;\r\n\r\n            posts.map(post => {\r\n                post.comments = comments.filter(comment => comment.postId === post.id);\r\n                return post;\r\n            });\r\n            return posts;\r\n        }));\r\n    }\r\n}\r\n\r\nexport default new JsonPlaceholderService();\r\n","import React, {memo} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst PostItem = memo(({ title, body, comments }) => (\r\n    <tr>\r\n        <td>\r\n            <h2>{ title }</h2>\r\n            <div>\r\n                <Button>Edit post</Button>\r\n                <Button>Delete post</Button>\r\n            </div>\r\n        </td>\r\n        <td>{ body }</td>\r\n        <td className=\"comments-container\">\r\n            {\r\n                comments.map((comment, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <p>{ comment.email }</p>\r\n                            <h3>{ comment.body }</h3>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </td>\r\n    </tr>\r\n));\r\n\r\nconst PostList = memo(({posts}) => {\r\n    return (\r\n        <div className=\"data-table\">\r\n            <table>\r\n                <tbody>\r\n                    {posts.map((data, index) =>\r\n                        <PostItem {...data} key={index} />\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PostList;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Dialog, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useFormControls = (initialValue) => {\r\n    const [values, setValues] = useState(initialValue);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n\r\n        if (\"title\" in fieldValues)\r\n            temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n\r\n        if (\"body\" in fieldValues) {\r\n            temp.body = fieldValues.body ? \"\" : \"This field is required.\"\r\n        }\r\n\r\n        setErrors({\r\n            ...temp\r\n        });\r\n    }\r\n    const handleInputValue = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n        validate({ [name]: value });\r\n    }\r\n    const formIsValid = (fieldValues = values) => {\r\n        validate();\r\n        return fieldValues.title &&\r\n            fieldValues.body &&\r\n            Object.values(errors).every((x) => x === \"\");\r\n    }\r\n    return {\r\n        handleInputValue,\r\n        formValues: values,\r\n        formIsValid,\r\n        errors\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: \"300px\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst PostForm = ({onDialogClose, isEditing, selectedPost}) => {\r\n    const classes = useStyles();\r\n    const initialFormValues = {\r\n        id: isEditing? selectedPost.id : null,\r\n        title: isEditing ? selectedPost.title : \"\",\r\n        body: isEditing ? selectedPost.body : \"\",\r\n        formSubmitted: false,\r\n        success: false\r\n    }\r\n\r\n    const { handleInputValue, formValues, errors, formIsValid} = useFormControls(initialFormValues);\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(formIsValid()) {\r\n            const post = {\r\n                id: isEditing ? formValues.id : 101,\r\n                title: formValues.title,\r\n                body: formValues.body\r\n            }\r\n            onDialogClose(post);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-column flex-center\">\r\n            <form onSubmit={handleFormSubmit} className={'flex-column ' + classes.root}>\r\n                <TextField name=\"title\"\r\n                           value={formValues.title}\r\n                           variant=\"outlined\"\r\n                           onChange={handleInputValue}\r\n                           onBlur={handleInputValue}\r\n                           label=\"Title\"\r\n                           {...(errors[\"title\"] && { error: true, helperText: errors[\"title\"] })}/>\r\n                <TextField name=\"body\"\r\n                           value={formValues.body}\r\n                           variant=\"outlined\"\r\n                           multiline\r\n                           onChange={handleInputValue}\r\n                           onBlur={handleInputValue}\r\n                           label=\"Body\"\r\n                           rows=\"5\"\r\n                           {...(errors[\"body\"] && { error: true, helperText: errors[\"body\"] })}/>\r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\">Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useDialogStyles = makeStyles({\r\n    padding: {\r\n        padding: \"0 15px 15px 15px\"\r\n    }\r\n})\r\n\r\nexport const PostFormDialog = (props) => {\r\n    const { onClose, open, isEditing, selectedPost } = props;\r\n\r\n    const classes = useDialogStyles();\r\n\r\n    return (\r\n        <Dialog onClose={() => onClose(null)}\r\n                open={open}>\r\n            <DialogTitle>{isEditing ? 'Edit post' : 'Add post'}</DialogTitle>\r\n            <div className={`flex-column flex-center ${classes.padding}`}>\r\n                <PostForm onDialogClose={(post) => onClose(post)} isEditing={isEditing} selectedPost={selectedPost}/>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {PostFormDialog} from \"./PostForm\";\r\nimport apiService from '../../../api/json-placeholder.service';\r\n\r\nexport const PostBtn = ({cb, isEditing = false, postId}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState({});\r\n\r\n    const handleDialogOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = (post) => {\r\n        setOpen(false);\r\n        if (post) {\r\n            cb(post);\r\n        }\r\n    }\r\n\r\n    const getPost = () => {\r\n        apiService.getPost(postId).then(post => {\r\n            setSelectedPost(post.data);\r\n            setOpen(true);\r\n        });\r\n    }\r\n\r\n    const props = { onClose: handleDialogClose, open, isEditing, selectedPost}\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"ButtonMargin\"\r\n                    onClick={isEditing ? getPost : handleDialogOpen}>\r\n                {isEditing ? 'Edit post' : 'Add post'}\r\n            </Button>\r\n            <PostFormDialog {...props} />\r\n        </>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Timer from \"../../utils/Timer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport \"./JSONPlaceholder.css\";\r\nimport {MatSelect} from \"../../components/MatSelect\";\r\nimport DisplayTimesJSONPlaceholder from \"./components/DisplayTimesJSONPlaceholder\";\r\nimport apiService from '../../api/json-placeholder.service';\r\nimport PostList from \"./components/PostList\";\r\nimport {PostBtn} from \"./components/PostBtn\";\r\n\r\nconst arrayOfIds = Array.from({length: 100}, (_, i) => i + 1);\r\n\r\nexport default class JSONPlaceholderBenchmark extends Component {\r\n    addPostTimer = new Timer('addPostTimer');\r\n    updatePostTimer = new Timer('updatePostTimer');\r\n    getPostTimer = new Timer('getPostTimer');\r\n    getPostsWithCommentsTimer = new Timer('getPostsWithCommentsTimer');\r\n    deletePostTimer = new Timer('deletePostTimer');\r\n    renderTimer = new Timer('renderTimer');\r\n\r\n    state = {\r\n        posts: [],\r\n        selectedPost: null,\r\n        postId: 1,\r\n        addPostTimer: null,\r\n        updatePostTimer: null,\r\n        getPostTimer: null,\r\n        getPostsWithCommentsTimer: null,\r\n        deletePostTimer: null,\r\n        renderTimer: null\r\n    };\r\n\r\n    addPost(post) {\r\n        this.addPostTimer.startTimer();\r\n        apiService.createPost(post).then(() => {\r\n            this.addPostTimer.stopTimer();\r\n            this.setState({addPostTimer: this.addPostTimer});\r\n        });\r\n    }\r\n\r\n    updatePost(post) {\r\n        this.updatePostTimer.startTimer();\r\n        apiService.updatePost(post).then(() => {\r\n            this.updatePostTimer.stopTimer();\r\n            this.setState({updatePostTimer: this.updatePostTimer});\r\n        });\r\n    }\r\n\r\n    getSelectedPost() {\r\n        this.getPostTimer.startTimer();\r\n        apiService.getPost(this.state.postId).then(post => {\r\n            this.getPostTimer.stopTimer();\r\n            this.setState({selectedPost: post.data, getPostTimer: this.getPostTimer});\r\n        });\r\n    }\r\n\r\n    getPostsWithComments() {\r\n        this.setState({ posts: []}, () => {\r\n            this.getPostsWithCommentsTimer.startTimer();\r\n            apiService.getPostsWithComments().then(data => {\r\n                this.getPostsWithCommentsTimer.stopTimer();\r\n                this.renderTimer.startTimer();\r\n                this.setState({posts: data, getPostsWithCommentsTimer: this.getPostsWithCommentsTimer}, () => {\r\n                    this.renderTimer.stopTimer();\r\n                    this.setState({renderTimer: this.renderTimer});\r\n                });\r\n            })\r\n        })\r\n    }\r\n\r\n    deletePost() {\r\n        this.deletePostTimer.startTimer();\r\n        apiService.deletePost(this.state.postId).then(() => {\r\n            this.deletePostTimer.stopTimer();\r\n            this.setState({deletePostTimer: this.deletePostTimer});\r\n        });\r\n    }\r\n\r\n    handleRowsNumberChange(rowsNumber) {\r\n        this.setState({rowsNumber});\r\n    }\r\n\r\n    clear() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const selectedPost = this.state.selectedPost;\r\n        return (\r\n            <div className=\"json-placeholder-container\">\r\n                <div className=\"actions\">\r\n                    <div>\r\n                        <MatSelect title=\"Choose post id\"\r\n                                   initialValue={this.state.postId}\r\n                                   handleChange={(e) => this.handleRowsNumberChange(e.target.value)}\r\n                                   selectDropdownList={arrayOfIds}/>\r\n                    </div>\r\n                    <div className=\"flex-row operations\">\r\n                        <PostBtn cb={(post) => this.addPost(post)}/>\r\n                        <PostBtn cb={(post) => this.updatePost(post)} isEditing postId={this.state.postId}/>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.getSelectedPost()}>Get post</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.deletePost()}>Delete post</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.getPostsWithComments()}>Get 100 posts with 500 comments</Button>\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                                onClick={() => this.clear()}>Clear</Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"result-container\">\r\n                    <DisplayTimesJSONPlaceholder {...this.state}/>\r\n                </div>\r\n                <div>\r\n                    {selectedPost &&\r\n                    <p><b>Selected post:</b> {selectedPost.id} | {selectedPost.title} | {selectedPost.body}</p>}\r\n                </div>\r\n                <PostList posts={this.state.posts}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}