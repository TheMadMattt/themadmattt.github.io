{"version":3,"sources":["pages/Home.jsx","utils/Timer.js","utils/DummyDataService.js","components/DummyDataDisplay.jsx","pages/LifecycleHooks/components/MatSelect.jsx","pages/LifecycleHooks/LifecycleHooksBenchmark.jsx","pages/RandomUserGeneratorBenchmark.jsx","pages/JSONPlaceholderBenchmark.jsx","pages/LocalApiBenchmark.jsx","routes/Routes.js","components/NavigationBar.jsx","App.jsx","index.js"],"names":["Profiler","React","Home","props","reloadsCount","timer","state","cls","fid","fcp","lcp","ttfb","pageLoaded","localStorage","getItem","getTTFB","entries","duration","pageLoadedList","JSON","parse","push","setItem","stringify","setState","getFCP","fcpList","value","getLCP","lcpList","getCLS","clsList","getFID","this","setTimeout","reload","clearTimeout","removeItem","toString","window","location","id","phase","actualTime","baseTime","startTime","commitTime","console","log","onRender","callback","className","Button","variant","color","onClick","runBenchmark","Component","Timer","timerName","endTime","totalTime","times","averageTime","performance","now","length","getAverageTime","sum","reduce","a","b","adjectives","colors","nouns","random","max","Math","round","buildOneItem","title","description","completed","DummyDataDisplay","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","MatSelect","rowsNumber","handleChange","classes","FormControl","InputLabel","Select","onChange","label","MenuItem","LifecycleHooksBenchmark","isCreating","isUpdating","isAppending","isDeleting","isReading","createTimer","updateTimer","appendTimer","deleteTimer","readTimer","dummyData","prevProps","prevState","snapshot","stopTimer","updateTime","update","isRemoving","removeTime","remove","startTimer","Array","fill","map","_","index","interactions","rendering","e","handleRowsNumberChange","target","createRows","data","key","operationStartTime","operationEndTime","arraySize","componentsToTest","RandomUserGeneratorBenchmark","componentUnderTestIndex","componentUnderTest","renderCount","isBenchmarkRunning","myRef","createRef","selectedTest","divElementsForLoop","divElementsMap","results","dogsz","randomText","dt","current","textContent","asd","i","addMap","editOneMap","editAllMap","removeOneMap","removeAllMap","time","ref","dogs","JSONPlaceholderBenchmark","LocalApiBenchmark","Routes","sidebarName","component","path","icon","HomeIcon","children","createStyles","root","flexGrow","menuButton","marginRight","textAlign","homeLink","textDecoration","drawer","width","fullList","withRouter","useState","isOpen","setIsOpen","toggleDrawer","drawerState","AppBar","position","Toolbar","IconButton","edge","Typography","href","Drawer","paper","open","onClose","role","MenuList","prop","to","style","selected","routeName","pathname","ListItemText","primary","createMuiTheme","palette","main","App","route","exact","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.737fc750.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./Home.css\"\r\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst Profiler = React.Profiler\r\n\r\nclass Home extends Component {\r\n    reloadsCount = 0;\r\n    timer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cls: 0,\r\n            fid: 0,\r\n            fcp: 0,\r\n            lcp: 0,\r\n            ttfb: 0,\r\n            pageLoaded: 0\r\n        }\r\n        this.reloadsCount = +localStorage.getItem(\"reloadsCounter\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        getTTFB(ttfb => {\r\n            const perfData = ttfb.entries[0];\r\n            const pageLoaded = perfData.duration;\r\n            let pageLoadedList = JSON.parse(localStorage.getItem(\"pageLoaded\"));\r\n            if (pageLoadedList === null) {\r\n                pageLoadedList = [];\r\n            }\r\n            pageLoadedList.push(pageLoaded);\r\n            localStorage.setItem(\"pageLoaded\", JSON.stringify(pageLoadedList));\r\n            this.setState({ttfb, pageLoaded});\r\n        });\r\n        getFCP(fcp => {\r\n            let fcpList = JSON.parse(localStorage.getItem(\"fcp\"));\r\n            if (fcpList === null) {\r\n                fcpList = [];\r\n            }\r\n            fcpList.push(fcp.value);\r\n            localStorage.setItem(\"fcp\", JSON.stringify(fcpList));\r\n            this.setState({fcp});\r\n        }, true);\r\n        getLCP(lcp => {\r\n            let lcpList = JSON.parse(localStorage.getItem(\"lcp\"));\r\n            if (lcpList === null) {\r\n                lcpList = [];\r\n            }\r\n            lcpList.push(lcp.value);\r\n            localStorage.setItem(\"lcp\", JSON.stringify(lcpList));\r\n            this.setState({lcp});\r\n        }, true);\r\n        getCLS(cls => {\r\n            let clsList = JSON.parse(localStorage.getItem(\"cls\"));\r\n            if (clsList === null) {\r\n                clsList = [];\r\n            }\r\n            clsList.push(cls.value);\r\n            localStorage.setItem(\"cls\", JSON.stringify(clsList));\r\n            this.setState({cls});\r\n        }, true);\r\n        getFID(fid => this.setState({fid}), true);\r\n        this.timer = setTimeout(() => this.reload(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    runBenchmark() {\r\n        this.reloadsCount = 4;\r\n        localStorage.removeItem(\"fcp\");\r\n        localStorage.removeItem(\"lcp\");\r\n        localStorage.removeItem(\"cls\");\r\n        localStorage.removeItem(\"pageLoaded\");\r\n        this.reload();\r\n    }\r\n\r\n    reload() {\r\n        if(this.reloadsCount > 0) {\r\n            localStorage.setItem(\"reloadsCounter\", (--this.reloadsCount).toString());\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    callback(id, phase, actualTime, baseTime, startTime, commitTime) {\r\n        console.log(id, phase, actualTime, baseTime, startTime, commitTime)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profiler id=\"benchmark-react\" onRender={this.callback}>\r\n                <div className=\"Home\">\r\n                    <div>\r\n                        <h1>Home</h1>\r\n                        <p>First Contentful Paint (FCP): {this.state.fcp.value} ms</p>\r\n                        <p>First Input Delay (FID): {this.state.fid.value} ms</p>\r\n                        <p>Largest Contentful Paint (LCP): {this.state.lcp.value} ms</p>\r\n                        <p>Time To First Byte (TTFB): {this.state.ttfb.value} ms</p>\r\n                        <p>Page loading time: {this.state.pageLoaded } ms</p>\r\n                    </div>\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Run benchmark</Button>\r\n                </div>\r\n            </Profiler>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export default class Timer {\r\n  timerName = '';\r\n  startTime = 0;\r\n  endTime = 0;\r\n  totalTime = 0;\r\n  times = [];\r\n  averageTime = 0;\r\n\r\n  constructor(timerName) {\r\n    this.timerName = timerName;\r\n  }\r\n\r\n  startTimer() {\r\n    this.startTime = performance.now();\r\n  }\r\n\r\n  stopTimer() {\r\n    if (this.startTime !== 0) {\r\n      this.endTime = performance.now();\r\n      this.totalTime = this.endTime - this.startTime;\r\n      this.times.push(this.totalTime);\r\n      if (this.times.length > 4) {\r\n        this.getAverageTime();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAverageTime() {\r\n    if (this.times.length > 0) {\r\n      const sum = this.times.reduce((a, b) => a + b);\r\n      this.averageTime = (sum / this.times.length);\r\n    }\r\n    return this.averageTime;\r\n  }\r\n\r\n  clear() {\r\n    this.startTime = 0;\r\n    this.endTime = 0;\r\n    this.totalTime = 0;\r\n    this.times = [];\r\n    this.averageTime = 0;\r\n  }\r\n}\r\n","const adjectives = [\r\n  'bad', 'best', 'better', 'big', 'certain', 'clear', 'different', 'early', 'easy', 'economic', 'federal', 'free',\r\n  'full', 'good', 'great', 'hard', 'high', 'human', 'important', 'international', 'large', 'late', 'little', 'local',\r\n  'long', 'low', 'major', 'military', 'national', 'new', 'old', 'only', 'other', 'political', 'possible', 'public',\r\n  'real', 'recent', 'right', 'small', 'social', 'special', 'strong', 'sure', 'true', 'white', 'whole', 'young',\r\n  'crazy', 'helpful', 'mushy'\r\n];\r\n\r\nconst colors = [\r\n  'red', 'yellow', 'blue', 'green', 'pink', 'brown', 'purple', 'brown', 'white', 'black', 'orange'\r\n];\r\n\r\nconst nouns = [\r\n  'area', 'book', 'business', 'case', 'child', 'company', 'country', 'day', 'eye', 'fact', 'family', 'government',\r\n  'group', 'hand', 'home', 'job', 'life', 'lot', 'man', 'money', 'month', 'mother', 'Mr', 'night', 'number', 'part',\r\n  'people', 'place', 'point', 'problem', 'program', 'question', 'right', 'room', 'school', 'state', 'story',\r\n  'student', 'study', 'system', 'thing', 'time', 'water', 'way', 'week', 'woman', 'word', 'work', 'world', 'year'\r\n];\r\n\r\nconst random = (max) => {\r\n  return Math.round(Math.random() * 1000) % max;\r\n}\r\n\r\nexport const buildData = (count) => {\r\n  return Array(count).fill(1).map((_, index) => {\r\n    return buildOneItem(index);\r\n  });\r\n}\r\n\r\nexport const buildOneItem = (id) => {\r\n  const title = nouns[random(nouns.length)];\r\n  const desc = `${adjectives[random(adjectives.length)]} ${colors[random(colors.length)]} ${nouns[random(nouns.length)]}`\r\n  const completed = false;\r\n  return {\r\n    id,\r\n    title,\r\n    description: desc,\r\n    completed\r\n  }\r\n}\r\n","import React from 'react';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport const DummyDataDisplay = ({ id, title, description, completed }) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td>{ id }</td>\r\n            <td>{ title }</td>\r\n            <td>{ description }</td>\r\n            <td>{ completed ? <DoneIcon/> : <ClearIcon/> }</td>\r\n        </tr>\r\n    );\r\n}\r\n","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nexport const MatSelect = ({rowsNumber, handleChange}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>Row number</InputLabel>\r\n            <Select\r\n                value={rowsNumber}\r\n                onChange={handleChange}\r\n                label=\"Row number\"\r\n            >\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n                <MenuItem value={10000}>10000</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Timer from \"../../utils/Timer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {buildData} from \"../../utils/DummyDataService\";\r\nimport {DummyDataDisplay} from \"../../components/DummyDataDisplay\";\r\nimport \"./LifecycleHooks.css\";\r\nimport {MatSelect} from \"./components/MatSelect\";\r\n\r\nconst Profiler = React.Profiler;\r\n\r\nexport default class LifecycleHooksBenchmark extends Component {\r\n    isCreating = false;\r\n    isUpdating = false;\r\n    isAppending = false;\r\n    isDeleting = false;\r\n    isReading = false;\r\n    createTimer = new Timer('createDummyData');\r\n    updateTimer = new Timer('updateDummyData');\r\n    appendTimer = new Timer('appendDummyData');\r\n    deleteTimer = new Timer('deleteDummyData');\r\n    readTimer = new Timer('readDummyData');\r\n\r\n    state = {\r\n        dummyData: [],\r\n        rowsNumber: 1000\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.isCreating) {\r\n            this.createTimer.stopTimer();\r\n            this.isCreating = false;\r\n        }\r\n        if(this.isUpdating) {\r\n            this.updateTime = performance.now() - this.startTime;\r\n            this.update.push(this.updateTime);\r\n            this.updateTime = 0;\r\n            this.isUpdating = false;\r\n        }\r\n        if(this.isRemoving) {\r\n            this.removeTime = performance.now() - this.startTime;\r\n            this.remove.push(this.removeTime);\r\n            this.removeTime = 0;\r\n            this.isUpdating = false;\r\n        }\r\n    }\r\n\r\n    createRows() {\r\n        this.isCreating = true;\r\n        this.createTimer.startTimer();\r\n        const dummyData = buildData(1000);\r\n        this.setState({dummyData});\r\n    }\r\n\r\n    callback(id, phase, actualTime, baseTime, startTime, commitTime, interactions) {\r\n        console.log(id, phase, actualTime, baseTime, interactions);\r\n        if (phase === \"update\") {\r\n            let rendering = JSON.parse(localStorage.getItem(\"render\"));\r\n            if (rendering === null) {\r\n                rendering = [];\r\n            }\r\n            rendering.push(baseTime);\r\n            localStorage.setItem(\"render\", JSON.stringify(rendering));\r\n        }\r\n    }\r\n\r\n    handleRowsNumberChange(rowsNumber) {\r\n        this.setState({rowsNumber});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"actions\">\r\n                    <div>\r\n                        <MatSelect rowsNumber={this.state.rowsNumber}\r\n                                   handleChange={(e) => this.handleRowsNumberChange(e.target.value)}/>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                            onClick={() => this.createRows()}>Create {this.state.rowsNumber} rows</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                            onClick={() => this.createRows()}>Create rows</Button>\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n                            onClick={() => this.createRows()}>Create rows</Button>\r\n                </div>\r\n                <Profiler id=\"lifecycle\" onRender={this.callback}>\r\n                    <table>\r\n                        <tbody>\r\n                            {this.state.dummyData.map((data) => <DummyDataDisplay {...data} key={data.id} />)}\r\n                        </tbody>\r\n                    </table>\r\n                </Profiler>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nlet operationStartTime = null\r\nlet operationEndTime = null\r\n\r\nconst repeats = 1;\r\nconst arraySize = 1000;\r\n\r\nconst componentsToTest = [\r\n    'Component',\r\n    'Component',\r\n    'Component',\r\n    'Component',\r\n    'Component'\r\n];\r\n\r\nexport default class RandomUserGeneratorBenchmark extends Component {\r\n    componentUnderTestIndex = -1;\r\n    componentUnderTest = null;\r\n    renderCount = -1;\r\n    times = [];\r\n    isBenchmarkRunning = false;\r\n    isRemoving = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedTest: 0,\r\n            divElementsForLoop: [],\r\n            divElementsMap: 0,\r\n            results: [],\r\n            dogsz: 1,\r\n            randomText: 'asd',\r\n            times: []\r\n        };\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        operationEndTime = performance.now()\r\n        console.log('Operation took ' + (operationEndTime - operationStartTime) + ' milliseconds')\r\n        ++this.renderCount;\r\n        this.dt += performance.now() - this.startTime;\r\n        if (this.renderCount % repeats === 0) {\r\n            if (this.componentUnderTestIndex > -1) {\r\n                this.times.push(this.dt);\r\n            }\r\n            ++this.componentUnderTestIndex;\r\n            this.dt = 0;\r\n            this.componentUnderTest = componentsToTest[this.componentUnderTestIndex];\r\n        }\r\n        if (this.componentUnderTest) {\r\n            if(this.isCreating) {\r\n                setTimeout(() => {\r\n                    this.startTime = performance.now();\r\n                    this.setState({ divElementsMap: arraySize });\r\n                }, 0);\r\n            }\r\n            if(this.isRemoving) {\r\n                this.setState({ divElementsMap: arraySize });\r\n                setTimeout(() => {\r\n                    this.startTime = performance.now();\r\n                    this.setState({ divElementsMap: 0 });\r\n                }, 0);\r\n            }\r\n        } else {\r\n            if (this.isBenchmarkRunning) {\r\n                this.setState({times: this.times});\r\n                this.isBenchmarkRunning = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1\r\n    addMap() {\r\n        this.isBenchmarkRunning = true;\r\n        this.renderCount = -1;\r\n        operationStartTime = performance.now()\r\n        this.setState({\r\n            divElementsMap: arraySize\r\n        })\r\n    }\r\n\r\n    // 2\r\n    editOneMap() {\r\n        operationStartTime = performance.now()\r\n        this.myRef.current.textContent = Math.random()\r\n        this.setState({\r\n            randomText: Math.random()\r\n        })\r\n    }\r\n\r\n    // 3\r\n    editAllMap() {\r\n        operationStartTime = performance.now()\r\n        this.setState({\r\n            dogsz: Math.random()\r\n        })\r\n    }\r\n\r\n    // 4\r\n    removeOneMap() {\r\n        operationStartTime = performance.now()\r\n        let asd = this.state.divElementsMap\r\n        this.setState({\r\n            divElementsMap: asd - 1\r\n        })\r\n    }\r\n\r\n    // 5\r\n    removeAllMap() {\r\n        this.isBenchmarkRunning = true;\r\n        this.isRemoving = true;\r\n        this.renderCount = -1;\r\n        operationStartTime = performance.now()\r\n        this.setState({\r\n            divElementsMap: arraySize\r\n        })\r\n    }\r\n\r\n    dogs(i) {\r\n        return this.state.dogsz * i\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Benchmark\">\r\n                <p>B) Array map</p>\r\n                <button onClick={() => this.addMap()}>1 Add</button>\r\n                <button onClick={() => this.editOneMap()}>2 Edit one</button>\r\n                <button onClick={() => this.editAllMap()}>3 Edit all</button>\r\n                <button onClick={() => this.removeOneMap()}>4 Remove one</button>\r\n                <button onClick={() => this.removeAllMap()}>5 Remove all</button>\r\n\r\n                <div>\r\n                    <ul>\r\n                        {this.state.times.map((time, index) =>\r\n                            <li key={index}>{time}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div>\r\n                    {this.state.divElementsForLoop}\r\n                </div>\r\n\r\n                <div\r\n                    id=\"divElementsMap\">\r\n                    {\r\n                        [...Array(this.state.divElementsMap)].map(\r\n                            (e, i) =>\r\n                                <div\r\n                                    id={i}\r\n                                    key={i}\r\n                                    ref={this.myRef}>\r\n                                    <p>Div {this.dogs(i)} {Math.random()}</p>\r\n                                </div>\r\n                        )\r\n                    }\r\n                    <p>{ this.state.randomText }</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class JSONPlaceholderBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>JSONPlaceholderBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class LocalApiBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>LocalApiBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import HomeIcon from '@material-ui/icons/Home';\r\nimport Home from \"../pages/Home\";\r\nimport LifecycleHooksBenchmark from \"../pages/LifecycleHooks/LifecycleHooksBenchmark\";\r\nimport RandomUserGeneratorBenchmark from \"../pages/RandomUserGeneratorBenchmark\";\r\nimport JSONPlaceholderBenchmark from \"../pages/JSONPlaceholderBenchmark\";\r\nimport LocalApiBenchmark from \"../pages/LocalApiBenchmark\";\r\n\r\nconst Routes = [\r\n    {\r\n        sidebarName: 'Home',\r\n        component: Home,\r\n        path: '/',\r\n        icon: HomeIcon,\r\n        children: [],\r\n    },\r\n    {\r\n        sidebarName: 'Lifecycle hooks benchmark',\r\n        component: LifecycleHooksBenchmark,\r\n        path: '/benchmarks/lifecycle-crud',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'REST API benchmark',\r\n        component: null,\r\n        path: '',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Random User Generator',\r\n        component: RandomUserGeneratorBenchmark,\r\n        path: '/benchmarks/random-user-generator',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: '{JSON} Placeholder',\r\n        component: JSONPlaceholderBenchmark,\r\n        path: '/benchmarks/json-placeholder',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Local API server',\r\n        component: LocalApiBenchmark,\r\n        path: '/benchmarks/local-rest-api',\r\n        icon: '',\r\n        children: []\r\n    }\r\n];\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Drawer, AppBar, MenuList, MenuItem, ListItemText\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Routes from \"../routes/Routes\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            textAlign: \"left\",\r\n            flexGrow: 1,\r\n        },\r\n        homeLink: {\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n        drawer: {\r\n            width: 300,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst NavigationBar = (props) => {\r\n    const classes = useStyles();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDrawer = (drawerState) => setIsOpen(drawerState);\r\n\r\n    const activeRoute = (routeName) => {\r\n        return props.location.pathname === routeName ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\"\r\n                                    className={classes.menuButton}\r\n                                    color=\"inherit\"\r\n                                    onClick={() => toggleDrawer(!isOpen)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            <a href=\"/\" className={classes.homeLink}>React</a>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Drawer classes={{ paper: classes.drawer }}\r\n                    open={isOpen}\r\n                    onClose={() => toggleDrawer(false)}>\r\n                <div className={classes.fullList}\r\n                     role=\"presentation\"\r\n                     onClick={() => toggleDrawer(false)}>\r\n                    <MenuList>\r\n                        {Routes.map((prop, key) => {\r\n                            return (\r\n                                <NavLink to={prop.path}\r\n                                         style={{ textDecoration: 'none', color: 'black' }}\r\n                                         key={key}>\r\n                                    <MenuItem selected={activeRoute(prop.path)}>\r\n                                        <ListItemText primary={prop.sidebarName} />\r\n                                    </MenuItem>\r\n                                </NavLink>\r\n                            );\r\n                        })}\r\n                    </MenuList>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, {Component} from \"react\"\nimport './App.css';\nimport NavigationBar from \"./components/NavigationBar\";\nimport Routes from \"./routes/Routes\";\nimport {Switch, Route} from \"react-router-dom\"\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1e2438'\n        },\n\n    },\n});\n\nclass App extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <div className=\"App\">\n                        <NavigationBar/>\n                        <Switch>\n                            {Routes.map(route => (\n                                route.component &&\n                                <Route exact path={route.path} key={route.path} component={route.component}/>\n                            ))}\n                        </Switch>\n                    </div>\n                </div>\n            </MuiThemeProvider>\n\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/frameworks/React/\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}