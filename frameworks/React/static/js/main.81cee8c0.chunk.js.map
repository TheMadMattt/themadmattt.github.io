{"version":3,"sources":["utils/FormatNumber.js","pages/Home/components/DisplayLoadingTimes.jsx","pages/Home/Home.jsx","utils/Timer.js","utils/DummyDataService.js","pages/LifecycleHooks/components/DummyDataList.jsx","components/MatSelect.jsx","components/DisplayTime.jsx","pages/LifecycleHooks/components/DisplayTimesLifecycle.jsx","pages/LifecycleHooks/LifecycleHooksBenchmark.jsx","pages/LocalApiBenchmark.jsx","pages/JSONPlaceholder/components/DisplayTimesJSONPlaceholder.jsx","api/JSONPlaceholder/http-common.js","api/JSONPlaceholder/json-placeholder.service.js","pages/JSONPlaceholder/components/PostList.jsx","pages/JSONPlaceholder/components/PostForm.jsx","pages/JSONPlaceholder/components/PostBtn.jsx","pages/JSONPlaceholder/JSONPlaceholderBenchmark.jsx","routes/Routes.js","components/NavigationBar.jsx","App.jsx","index.js"],"names":["FormatNumber","value","decimalPlaces","Number","parseFloat","toFixed","DisplayLoadingTimes","title","times","className","map","time","index","fcpTitle","lcpTitle","ttfbTitle","pageLoadingTitle","Home","props","reloadsCount","timer","state","fid","fcp","lcp","ttfb","pageLoaded","pageLoadedList","fcpList","lcpList","clsList","ttfbList","localStorage","getItem","getTTFB","entries","duration","JSON","parse","push","setItem","stringify","setState","getFCP","getLCP","this","setTimeout","reload","clearTimeout","clearLocalStorage","clear","toString","window","location","Button","variant","color","onClick","runBenchmark","Component","Timer","timerName","startTime","endTime","totalTime","averageTime","startTimer","performance","now","stopTimer","length","getAverageTime","sum","reduce","a","b","adjectives","colors","nouns","random","max","Math","round","buildData","count","Array","fill","_","buildOneItem","id","description","completed","DummyDataItem","memo","DummyDataList","dummyData","data","key","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","marginBottom","MatSelect","initialValue","selectDropdownList","handleChange","classes","FormControl","InputLabel","Select","onChange","MenuProps","disableScrollLock","label","rows","MenuItem","displayTimeContainer","padding","textAlign","border","timeContainer","DisplayTime","useState","open","setOpen","handleDialog","onClose","Badge","badgeContent","IconButton","TimeList","List","ListItem","usePadding","TimeListDialog","Dialog","DialogTitle","DisplayTimesLifecycle","displayTimeList","rowsNumber","createTimer","updateAllTimer","appendTimer","removeAllTimer","selectRandomTimer","updateRandomTimer","removeRandomTimer","displayTime","rowsNumberList","LifecycleHooksBenchmark","selectedDummyData","newData","slice","i","r","prevState","concat","selected","selectedDummyItem","selectedItem","e","handleRowsNumberChange","target","createRows","updateAllRows","appendRows","removeAllRows","selectRandomRow","disabled","updateRandomRow","removeRandomRow","LocalApiBenchmark","DisplayTimesJSONPlaceholder","addPostTimer","updatePostTimer","getPostTimer","deletePostTimer","getPostsWithCommentsTimer","renderTimer","axios","create","baseURL","headers","post","http","put","get","delete","all","getPosts","getComments","then","spread","response","posts","comments","filter","comment","postId","PostItem","body","email","PostList","root","width","PostForm","onDialogClose","isEditing","selectedPost","values","setValues","errors","setErrors","validate","fieldValues","temp","handleInputValue","name","formValues","formIsValid","Object","every","x","useFormControls","formSubmitted","success","onSubmit","preventDefault","TextField","onBlur","error","helperText","multiline","type","useDialogStyles","PostFormDialog","PostBtn","cb","setSelectedPost","apiService","getPost","arrayOfIds","from","JSONPlaceholderBenchmark","createPost","updatePost","getPostsWithComments","deletePost","addPost","getSelectedPost","Routes","sidebarName","component","path","icon","children","createStyles","flexGrow","menuButton","marginRight","homeLink","textDecoration","drawer","fullList","withRouter","isOpen","setIsOpen","toggleDrawer","drawerState","AppBar","position","Toolbar","edge","Typography","href","Drawer","paper","role","MenuList","prop","to","style","routeName","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","main","App","route","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81cee8c0.chunk.js","sourcesContent":["export const FormatNumber = (value, decimalPlaces) => {\r\n    return Number.parseFloat(value).toFixed(decimalPlaces);\r\n};\r\n","import React from \"react\";\r\nimport {FormatNumber} from \"../../../utils/FormatNumber\";\r\n\r\nconst decimalPlaces = 5;\r\n\r\nexport const DisplayLoadingTimes = ({title, times}) => {\r\n    return (\r\n        <div>\r\n            <p><b>{ title }</b></p>\r\n            <ul className=\"loading-metrics-box\">\r\n                {times.map((time, index) => <li key={index}>{FormatNumber(time, decimalPlaces)} ms</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./Home.css\"\r\nimport { getFCP, getLCP, getTTFB } from 'web-vitals';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {DisplayLoadingTimes} from \"./components/DisplayLoadingTimes\";\r\nimport {FormatNumber} from \"../../utils/FormatNumber\";\r\n\r\nconst fcpTitle = \"First Contentful Paint (FCP)\";\r\nconst lcpTitle = \"Largest Contentful Paint (LCP)\";\r\nconst ttfbTitle = \"Time To First Byte (TTFB)\";\r\nconst pageLoadingTitle = \"Page loading time\";\r\n\r\nconst decimalPlaces = 5;\r\n\r\nclass Home extends Component {\r\n    reloadsCount = 0;\r\n    timer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fid: 0,\r\n            fcp: 0,\r\n            lcp: 0,\r\n            ttfb: 0,\r\n            pageLoaded: 0,\r\n            pageLoadedList: [],\r\n            fcpList: [],\r\n            lcpList: [],\r\n            clsList: [],\r\n            ttfbList: []\r\n        }\r\n        this.reloadsCount = +localStorage.getItem(\"reloadsCounter\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        getTTFB(ttfb => {\r\n            const perfData = ttfb.entries[0];\r\n            const pageLoaded = perfData.duration;\r\n            let pageLoadedList = JSON.parse(localStorage.getItem(\"pageLoaded_react\"));\r\n            let ttfbList = JSON.parse(localStorage.getItem(\"ttfb_react\"));\r\n            if (pageLoadedList === null) {\r\n                pageLoadedList = [];\r\n            }\r\n            if (ttfbList === null) {\r\n                ttfbList = [];\r\n            }\r\n            pageLoadedList.push(pageLoaded);\r\n            ttfbList.push(ttfb.value)\r\n            localStorage.setItem(\"pageLoaded_react\", JSON.stringify(pageLoadedList));\r\n            localStorage.setItem(\"ttfb_react\", JSON.stringify(ttfbList));\r\n            this.setState({ttfb, pageLoaded, pageLoadedList, ttfbList});\r\n        });\r\n        getFCP(fcp => {\r\n            let fcpList = JSON.parse(localStorage.getItem(\"fcp_react\"));\r\n            if (fcpList === null) {\r\n                fcpList = [];\r\n            }\r\n            fcpList.push(fcp.value);\r\n            localStorage.setItem(\"fcp_react\", JSON.stringify(fcpList));\r\n            this.setState({fcp, fcpList});\r\n        }, true);\r\n        getLCP(lcp => {\r\n            let lcpList = JSON.parse(localStorage.getItem(\"lcp_react\"));\r\n            if (lcpList === null) {\r\n                lcpList = [];\r\n            }\r\n            lcpList.push(lcp.value);\r\n            localStorage.setItem(\"lcp_react\", JSON.stringify(lcpList));\r\n            this.setState({lcp, lcpList});\r\n        }, true);\r\n        this.timer = setTimeout(() => this.reload(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    runBenchmark() {\r\n        this.reloadsCount = 5;\r\n        this.clearLocalStorage();\r\n        this.reload();\r\n    }\r\n\r\n    clearLocalStorage() {\r\n        localStorage.clear();\r\n        this.setState({ fcpList: [], lcpList: [], ttfbList: [], pageLoadedList: []});\r\n    }\r\n\r\n    reload() {\r\n        if(this.reloadsCount > 0) {\r\n            localStorage.setItem(\"reloadsCounter\", (--this.reloadsCount).toString());\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home flex-column\">\r\n                <div>\r\n                    <p><b>{fcpTitle}:</b> {FormatNumber(this.state.fcp.value, decimalPlaces)} ms</p>\r\n                    <p><b>{lcpTitle}:</b> {FormatNumber(this.state.lcp.value, decimalPlaces)} ms</p>\r\n                    <p><b>{ttfbTitle}:</b> {FormatNumber(this.state.ttfb.value, decimalPlaces)} ms</p>\r\n                    <p><b>{pageLoadingTitle}:</b> {FormatNumber(this.state.pageLoaded, decimalPlaces) } ms</p>\r\n                </div>\r\n                <div className=\"flex-row flex-center\">\r\n                    <DisplayLoadingTimes title={fcpTitle} times={this.state.fcpList}/>\r\n                    <DisplayLoadingTimes title={lcpTitle} times={this.state.lcpList}/>\r\n                    <DisplayLoadingTimes title={ttfbTitle} times={this.state.ttfbList}/>\r\n                    <DisplayLoadingTimes title={pageLoadingTitle} times={this.state.pageLoadedList}/>\r\n                </div>\r\n                <div className=\"ButtonMargin\">\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Run benchmark</Button>\r\n\r\n                    <Button variant=\"contained\"\r\n                            className=\"red-btn\"\r\n                            onClick={() => this.clearLocalStorage()}>Clear local storage</Button>\r\n\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Save to excel</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export default class Timer {\r\n  timerName = '';\r\n  startTime = 0;\r\n  endTime = 0;\r\n  totalTime = 0;\r\n  times = [];\r\n  averageTime = 0;\r\n\r\n  constructor(timerName) {\r\n    this.timerName = timerName;\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.startTime = performance.now();\r\n  }\r\n\r\n  stopTimer = () => {\r\n    if (this.startTime !== 0) {\r\n      this.endTime = performance.now();\r\n      this.totalTime = this.endTime - this.startTime;\r\n      this.times.push(this.totalTime);\r\n      if (this.times.length > 2) {\r\n        this.getAverageTime();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAverageTime = () => {\r\n    const sum = this.times.reduce((a, b) => a + b);\r\n    this.averageTime = (sum / this.times.length);\r\n    return this.averageTime;\r\n  }\r\n\r\n  clear = () => {\r\n    this.startTime = 0;\r\n    this.endTime = 0;\r\n    this.totalTime = 0;\r\n    this.times = [];\r\n    this.averageTime = 0;\r\n  }\r\n}\r\n","const adjectives = [\r\n  'bad', 'best', 'better', 'big', 'certain', 'clear', 'different', 'early', 'easy', 'economic', 'federal', 'free',\r\n  'full', 'good', 'great', 'hard', 'high', 'human', 'important', 'international', 'large', 'late', 'little', 'local',\r\n  'long', 'low', 'major', 'military', 'national', 'new', 'old', 'only', 'other', 'political', 'possible', 'public',\r\n  'real', 'recent', 'right', 'small', 'social', 'special', 'strong', 'sure', 'true', 'white', 'whole', 'young',\r\n  'crazy', 'helpful', 'mushy'\r\n];\r\n\r\nconst colors = [\r\n  'red', 'yellow', 'blue', 'green', 'pink', 'brown', 'purple', 'brown', 'white', 'black', 'orange'\r\n];\r\n\r\nconst nouns = [\r\n  'area', 'book', 'business', 'case', 'child', 'company', 'country', 'day', 'eye', 'fact', 'family', 'government',\r\n  'group', 'hand', 'home', 'job', 'life', 'lot', 'man', 'money', 'month', 'mother', 'Mr', 'night', 'number', 'part',\r\n  'people', 'place', 'point', 'problem', 'program', 'question', 'right', 'room', 'school', 'state', 'story',\r\n  'student', 'study', 'system', 'thing', 'time', 'water', 'way', 'week', 'woman', 'word', 'work', 'world', 'year'\r\n];\r\n\r\nexport const random = (max) => {\r\n  return Math.round(Math.random() * 1000) % max;\r\n}\r\n\r\nexport const buildData = (count) => {\r\n  return Array(count).fill(1).map((_, index) => {\r\n    return buildOneItem(index);\r\n  });\r\n}\r\n\r\nexport const buildOneItem = (id) => {\r\n  const title = nouns[random(nouns.length)];\r\n  const desc = `${adjectives[random(adjectives.length)]} ${colors[random(colors.length)]} ${nouns[random(nouns.length)]}`\r\n  const completed = false;\r\n  return {\r\n    id,\r\n    title,\r\n    description: desc,\r\n    completed\r\n  }\r\n}\r\n","import React, {memo} from 'react';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst DummyDataItem = memo(({ id, title, description, completed }) => (\r\n        <tr>\r\n            <td>{ id }</td>\r\n            <td>{ title }</td>\r\n            <td>{ description }</td>\r\n            <td>{ completed ? <DoneIcon/> : <ClearIcon/> }</td>\r\n        </tr>\r\n));\r\n\r\nconst DummyDataList = memo(({dummyData}) => {\r\n    return (\r\n        <div className=\"data-table\">\r\n            <table>\r\n                <tbody>\r\n                {dummyData.map((data, index) =>\r\n                    <DummyDataItem {...data} key={index} />\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default DummyDataList;\r\n","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        marginBottom: \"20px\"\r\n    },\r\n}));\r\n\r\nexport const MatSelect = ({title, initialValue, selectDropdownList, handleChange}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>{title}</InputLabel>\r\n            <Select\r\n                value={initialValue}\r\n                onChange={handleChange}\r\n                MenuProps={{\r\n                    disableScrollLock: true\r\n                }}\r\n                label={title}\r\n            >\r\n                {selectDropdownList.map((rows, index) =>\r\n                    <MenuItem key={index} value={rows}>{rows}</MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Badge, Dialog, DialogTitle, IconButton, List, ListItem} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {FormatNumber} from \"../utils/FormatNumber\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles({\r\n    displayTimeContainer: {\r\n        padding: \"0 10px\",\r\n        textAlign: \"center\",\r\n        border: \"2px solid black\",\r\n        margin: \"5px\"\r\n    },\r\n    timeContainer: {\r\n        marginBottom: \"15px\"\r\n    }\r\n});\r\n\r\nconst decimalPlaces = 5;\r\n\r\nexport const DisplayTime = ({title, timer}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const time = timer && (timer.averageTime > 0 ? timer.averageTime : timer.totalTime);\r\n\r\n    const handleDialog = (value) => {\r\n        setOpen(value);\r\n    };\r\n\r\n    const props = { onClose: handleDialog, open, timer, title }\r\n\r\n    return (\r\n        <div className={classes.displayTimeContainer}>\r\n            <div className={classes.timeContainer}>\r\n                <h3><strong>{title}</strong></h3>\r\n                {timer ? FormatNumber(time, decimalPlaces) : 0 } ms\r\n            </div>\r\n            <Badge color=\"secondary\" badgeContent={timer && timer.times.length}>\r\n                <IconButton variant=\"contained\" color=\"primary\" onClick={() => handleDialog(true)}>\r\n                    <ExpandMoreIcon/>\r\n                </IconButton>\r\n            </Badge>\r\n            <TimeListDialog {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeList = ({times}) => (\r\n    <List>\r\n        {times.map((time, index) => (\r\n            <ListItem key={index}>{ FormatNumber(time, decimalPlaces) } ms</ListItem>\r\n        ))}\r\n    </List>\r\n)\r\n\r\nconst usePadding = makeStyles({\r\n    padding: {\r\n        padding: \"0 15px 15px 15px\"\r\n    }\r\n})\r\n\r\nconst TimeListDialog = (props) => {\r\n    const { onClose, open, timer, title } = props;\r\n\r\n    const classes = usePadding();\r\n\r\n    return (\r\n        <Dialog onClose={() => onClose(false)} open={open}>\r\n            <div className={`flex-column flex-center ${classes.padding}`}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <p><b>Average time: </b>{timer ? FormatNumber(timer.averageTime, decimalPlaces) : '0'} ms</p>\r\n                {\r\n                    timer ? <TimeList times={timer.times}/> : <p>No times to show.</p>\r\n                }\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import {DisplayTime} from \"../../../components/DisplayTime\";\r\nimport React from \"react\";\r\n\r\nconst DisplayTimesLifecycle = (props) => {\r\n    const displayTimeList = [\r\n        {\r\n            title: \"Creating \" + props.rowsNumber + \" rows\",\r\n            timer: props.createTimer\r\n        },\r\n        {\r\n            title: \"Update \" + props.rowsNumber + \" rows\",\r\n            timer: props.updateAllTimer\r\n        },\r\n        {\r\n            title: \"Appending 1000 rows\",\r\n            timer: props.appendTimer\r\n        },\r\n        {\r\n            title: \"Removing \" + props.rowsNumber + \" rows\",\r\n            timer: props.removeAllTimer\r\n        },\r\n        {\r\n            title: \"Selecting random row\",\r\n            timer: props.selectRandomTimer\r\n        },\r\n        {\r\n            title: \"Updating random row\",\r\n            timer: props.updateRandomTimer\r\n        },\r\n        {\r\n            title: \"Removing random row\",\r\n            timer: props.removeRandomTimer\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {\r\n                displayTimeList.map((displayTime, index) =>\r\n                    <DisplayTime key={index} {...displayTime}/>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayTimesLifecycle;\r\n","import React, {Component} from \"react\";\r\nimport Timer from \"../../utils/Timer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {buildData, random} from \"../../utils/DummyDataService\";\r\nimport \"./LifecycleHooks.css\";\r\nimport DummyDataList from \"./components/DummyDataList\";\r\nimport {MatSelect} from \"../../components/MatSelect\";\r\nimport DisplayTimesLifecycle from \"./components/DisplayTimesLifecycle\";\r\n\r\nconst rowsNumberList = [1000, 2000, 5000, 10000];\r\n\r\nexport default class LifecycleHooksBenchmark extends Component {\r\n    createTimer = new Timer('createTimer');\r\n    updateAllTimer = new Timer('updateAllTimer')\r\n    appendTimer = new Timer('appendTimer');\r\n    removeAllTimer = new Timer('removeAllTimer');\r\n    selectRandomTimer = new Timer('selectRandomTimer');\r\n    updateRandomTimer = new Timer('updateRandomTimer');\r\n    removeRandomTimer = new Timer('removeRandomTimer');\r\n\r\n    state = {\r\n        dummyData: [],\r\n        selectedDummyData: null,\r\n        rowsNumber: 1000,\r\n        createTimer: null,\r\n        appendTimer: null,\r\n        removeAllTimer: null,\r\n        updateAllTimer: null,\r\n        selectRandomTimer: null,\r\n        updateRandomTimer: null,\r\n        removeRandomTimer: null\r\n    };\r\n\r\n    createRows() {\r\n        this.setState({dummyData: []}, () => {\r\n            this.createTimer.startTimer();\r\n            this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n                this.createTimer.stopTimer();\r\n                this.setState({createTimer: this.createTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    updateAllRows() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            this.updateAllTimer.startTimer();\r\n            const newData = this.state.dummyData.slice(0);\r\n\r\n            for (let i = 0; i < newData.length; i++) {\r\n                const r = newData[i];\r\n\r\n                newData[i] = {\r\n                    id: r.id,\r\n                    title: r.title + \" UPDATED\",\r\n                    description: r.description + \" UPDATED\",\r\n                    completed: !r.completed\r\n                };\r\n            }\r\n            this.setState({dummyData: newData}, () => {\r\n                this.updateAllTimer.stopTimer();\r\n                this.setState({updateAllTimer: this.updateAllTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    appendRows() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            this.appendTimer.startTimer();\r\n            this.setState(prevState => ({\r\n                dummyData: prevState.dummyData.concat(buildData(1000))\r\n            }), () => {\r\n                this.appendTimer.stopTimer();\r\n                this.setState({appendTimer: this.appendTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    removeAllRows() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            this.removeAllTimer.startTimer();\r\n            this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n                this.removeAllTimer.stopTimer();\r\n                this.setState({removeAllTimer: this.removeAllTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    selectRandomRow() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            const data = this.state.dummyData\r\n            this.selectRandomTimer.startTimer();\r\n            const id = random(data.length);\r\n            const selected = data[id];\r\n            this.setState({selectedDummyData: selected}, () => {\r\n                this.selectRandomTimer.stopTimer();\r\n                this.setState({selectRandomTimer: this.selectRandomTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    updateRandomRow() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            let data = this.state.dummyData\r\n            this.updateRandomTimer.startTimer();\r\n            const id = random(data.length);\r\n            const selectedDummyItem = data[id];\r\n            selectedDummyItem.title += \" UPDATED\";\r\n            selectedDummyItem.description += \" UPDATED\";\r\n\r\n            data[id] = selectedDummyItem;\r\n\r\n            this.setState({dummyData: data}, () => {\r\n                this.updateRandomTimer.stopTimer();\r\n                this.setState({updateRandomTimer: this.updateRandomTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    removeRandomRow() {\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            const data = this.state.dummyData\r\n            this.removeRandomTimer.startTimer();\r\n            const id = random(data.length);\r\n\r\n\r\n            this.setState({ dummyData: [...data.slice(0, id), ...data.slice(id + 1)] }, () => {\r\n                this.removeRandomTimer.stopTimer();\r\n                this.setState({removeRandomTimer: this.removeRandomTimer});\r\n            });\r\n        });\r\n    }\r\n\r\n    handleRowsNumberChange(rowsNumber) {\r\n        this.setState({rowsNumber});\r\n    }\r\n\r\n    clear() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const selectedItem = this.state.selectedDummyData;\r\n        return (\r\n            <div>\r\n                <div className=\"actions\">\r\n                    <div>\r\n                        <MatSelect title=\"Row number\"\r\n                                   initialValue={this.state.rowsNumber}\r\n                                   handleChange={(e) => this.handleRowsNumberChange(e.target.value)}\r\n                                   selectDropdownList={rowsNumberList}/>\r\n                    </div>\r\n                    <div className=\"flex-row operations\">\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.createRows()}>Create {this.state.rowsNumber} rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.updateAllRows()}>Update {this.state.rowsNumber} rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.appendRows()}>Append 1000 rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.removeAllRows()}>Remove all rows</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.selectRandomRow()}\r\n                                disabled={this.state.dummyData.length <= 0}>Select random row</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.updateRandomRow()}\r\n                                disabled={this.state.dummyData.length <= 0}>Update random row</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.removeRandomRow()}\r\n                                disabled={this.state.dummyData.length <= 0}>Remove random row</Button>\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                                onClick={() => this.clear()}>Clear</Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"result-container\">\r\n                    <DisplayTimesLifecycle {...this.state}/>\r\n                </div>\r\n                <div>\r\n                    {selectedItem &&\r\n                    <p><b>Selected item:</b> {selectedItem.id} | {selectedItem.title} | {selectedItem.description}</p>}\r\n                </div>\r\n                <DummyDataList dummyData={this.state.dummyData}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class LocalApiBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>LocalApiBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import {DisplayTime} from \"../../../components/DisplayTime\";\r\nimport React from \"react\";\r\n\r\nconst DisplayTimesJSONPlaceholder = (props) => {\r\n    const displayTimeList = [\r\n        {\r\n            title: \"Adding post\",\r\n            timer: props.addPostTimer\r\n        },\r\n        {\r\n            title: \"Updating post\",\r\n            timer: props.updatePostTimer\r\n        },\r\n        {\r\n            title: 'Getting post',\r\n            timer: props.getPostTimer\r\n        },\r\n        {\r\n            title: \"Removing post\",\r\n            timer: props.deletePostTimer\r\n        },\r\n        {\r\n            title: \"Getting posts with comments\",\r\n            timer: props.getPostsWithCommentsTimer\r\n        },\r\n        {\r\n            title: \"Rendering 100 posts\",\r\n            timer: props.renderTimer\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {\r\n                displayTimeList.map((displayTime, index) =>\r\n                    <DisplayTime key={index} {...displayTime}/>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayTimesJSONPlaceholder;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});\r\n","import http from './http-common';\r\nimport axios from \"axios\";\r\n\r\nclass JsonPlaceholderService {\r\n    createPost(post) {\r\n        return http.post(\"posts\", post);\r\n    }\r\n\r\n    updatePost(post) {\r\n        return http.put(\"posts/\" + post.id, post);\r\n    }\r\n\r\n    getPost(id) {\r\n        return http.get(\"posts/\" + id);\r\n    }\r\n\r\n    deletePost(id) {\r\n        return http.delete(\"posts/\" + id);\r\n    }\r\n\r\n    getPosts() {\r\n        return http.get(\"posts\")\r\n    }\r\n\r\n    getComments() {\r\n        return http.get(\"comments\")\r\n    }\r\n\r\n    getPostsWithComments() {\r\n        return axios.all([this.getPosts(), this.getComments()]).then(axios.spread((...response) => {\r\n            const posts = response[0].data;\r\n            const comments = response[1].data;\r\n\r\n            posts.map(post => {\r\n                post.comments = comments.filter(comment => comment.postId === post.id);\r\n                return post;\r\n            });\r\n            return posts;\r\n        }));\r\n    }\r\n}\r\n\r\nexport default new JsonPlaceholderService();\r\n","import React, {memo} from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst PostItem = memo(({ title, body, comments }) => (\r\n    <tr>\r\n        <td>\r\n            <h2>{ title }</h2>\r\n            <div>\r\n                <Button>Edit post</Button>\r\n                <Button>Delete post</Button>\r\n            </div>\r\n        </td>\r\n        <td>{ body }</td>\r\n        <td className=\"comments-container\">\r\n            {\r\n                comments.map((comment, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <p>{ comment.email }</p>\r\n                            <h3>{ comment.body }</h3>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </td>\r\n    </tr>\r\n));\r\n\r\nconst PostList = memo(({posts}) => {\r\n    return (\r\n        <div className=\"data-table\">\r\n            <table>\r\n                <tbody>\r\n                    {posts.map((data, index) =>\r\n                        <PostItem {...data} key={index} />\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PostList;\r\n","import React, {useState} from \"react\";\r\nimport {Button, Dialog, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useFormControls = (initialValue) => {\r\n    const [values, setValues] = useState(initialValue);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n\r\n        if (\"title\" in fieldValues)\r\n            temp.title = fieldValues.title ? \"\" : \"This field is required.\"\r\n\r\n        if (\"body\" in fieldValues) {\r\n            temp.body = fieldValues.body ? \"\" : \"This field is required.\"\r\n        }\r\n\r\n        setErrors({\r\n            ...temp\r\n        });\r\n    }\r\n    const handleInputValue = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n        validate({ [name]: value });\r\n    }\r\n    const formIsValid = (fieldValues = values) => {\r\n        validate();\r\n        return fieldValues.title &&\r\n            fieldValues.body &&\r\n            Object.values(errors).every((x) => x === \"\");\r\n    }\r\n    return {\r\n        handleInputValue,\r\n        formValues: values,\r\n        formIsValid,\r\n        errors\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: \"300px\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst PostForm = ({onDialogClose, isEditing, selectedPost}) => {\r\n    const classes = useStyles();\r\n    const initialFormValues = {\r\n        id: isEditing? selectedPost.id : null,\r\n        title: isEditing ? selectedPost.title : \"\",\r\n        body: isEditing ? selectedPost.body : \"\",\r\n        formSubmitted: false,\r\n        success: false\r\n    }\r\n\r\n    const { handleInputValue, formValues, errors, formIsValid} = useFormControls(initialFormValues);\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(formIsValid()) {\r\n            const post = {\r\n                id: isEditing ? formValues.id : 101,\r\n                title: formValues.title,\r\n                body: formValues.body\r\n            }\r\n            onDialogClose(post);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-column flex-center\">\r\n            <form onSubmit={handleFormSubmit} className={'flex-column ' + classes.root}>\r\n                <TextField name=\"title\"\r\n                           value={formValues.title}\r\n                           variant=\"outlined\"\r\n                           onChange={handleInputValue}\r\n                           onBlur={handleInputValue}\r\n                           label=\"Title\"\r\n                           {...(errors[\"title\"] && { error: true, helperText: errors[\"title\"] })}/>\r\n                <TextField name=\"body\"\r\n                           value={formValues.body}\r\n                           variant=\"outlined\"\r\n                           multiline\r\n                           onChange={handleInputValue}\r\n                           onBlur={handleInputValue}\r\n                           label=\"Body\"\r\n                           rows=\"5\"\r\n                           {...(errors[\"body\"] && { error: true, helperText: errors[\"body\"] })}/>\r\n                <Button variant=\"contained\" type=\"submit\" color=\"primary\">Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useDialogStyles = makeStyles({\r\n    padding: {\r\n        padding: \"0 15px 15px 15px\"\r\n    }\r\n})\r\n\r\nexport const PostFormDialog = (props) => {\r\n    const { onClose, open, isEditing, selectedPost } = props;\r\n\r\n    const classes = useDialogStyles();\r\n\r\n    return (\r\n        <Dialog onClose={() => onClose(null)}\r\n                open={open}>\r\n            <DialogTitle>{isEditing ? 'Edit post' : 'Add post'}</DialogTitle>\r\n            <div className={`flex-column flex-center ${classes.padding}`}>\r\n                <PostForm onDialogClose={(post) => onClose(post)} isEditing={isEditing} selectedPost={selectedPost}/>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {PostFormDialog} from \"./PostForm\";\r\nimport apiService from '../../../api/JSONPlaceholder/json-placeholder.service';\r\n\r\nexport const PostBtn = ({cb, isEditing = false, postId}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState({});\r\n\r\n    const handleDialogOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = (post) => {\r\n        setOpen(false);\r\n        if (post) {\r\n            cb(post);\r\n        }\r\n    }\r\n\r\n    const getPost = () => {\r\n        apiService.getPost(postId).then(post => {\r\n            setSelectedPost(post.data);\r\n            setOpen(true);\r\n        });\r\n    }\r\n\r\n    const props = { onClose: handleDialogClose, open, isEditing, selectedPost}\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"ButtonMargin\"\r\n                    onClick={isEditing ? getPost : handleDialogOpen}>\r\n                {isEditing ? 'Edit post' : 'Add post'}\r\n            </Button>\r\n            <PostFormDialog {...props} />\r\n        </>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Timer from \"../../utils/Timer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport \"./JSONPlaceholder.css\";\r\nimport {MatSelect} from \"../../components/MatSelect\";\r\nimport DisplayTimesJSONPlaceholder from \"./components/DisplayTimesJSONPlaceholder\";\r\nimport apiService from '../../api/JSONPlaceholder/json-placeholder.service';\r\nimport PostList from \"./components/PostList\";\r\nimport {PostBtn} from \"./components/PostBtn\";\r\n\r\nconst arrayOfIds = Array.from({length: 100}, (_, i) => i + 1);\r\n\r\nexport default class JSONPlaceholderBenchmark extends Component {\r\n    addPostTimer = new Timer('addPostTimer');\r\n    updatePostTimer = new Timer('updatePostTimer');\r\n    getPostTimer = new Timer('getPostTimer');\r\n    getPostsWithCommentsTimer = new Timer('getPostsWithCommentsTimer');\r\n    deletePostTimer = new Timer('deletePostTimer');\r\n    renderTimer = new Timer('renderTimer');\r\n\r\n    state = {\r\n        posts: [],\r\n        selectedPost: null,\r\n        postId: 1,\r\n        addPostTimer: null,\r\n        updatePostTimer: null,\r\n        getPostTimer: null,\r\n        getPostsWithCommentsTimer: null,\r\n        deletePostTimer: null,\r\n        renderTimer: null\r\n    };\r\n\r\n    addPost(post) {\r\n        this.addPostTimer.startTimer();\r\n        apiService.createPost(post).then(() => {\r\n            this.addPostTimer.stopTimer();\r\n            this.setState({addPostTimer: this.addPostTimer});\r\n        });\r\n    }\r\n\r\n    updatePost(post) {\r\n        this.updatePostTimer.startTimer();\r\n        apiService.updatePost(post).then(() => {\r\n            this.updatePostTimer.stopTimer();\r\n            this.setState({updatePostTimer: this.updatePostTimer});\r\n        });\r\n    }\r\n\r\n    getSelectedPost() {\r\n        this.getPostTimer.startTimer();\r\n        apiService.getPost(this.state.postId).then(post => {\r\n            this.getPostTimer.stopTimer();\r\n            this.setState({selectedPost: post.data, getPostTimer: this.getPostTimer});\r\n        });\r\n    }\r\n\r\n    getPostsWithComments() {\r\n        this.setState({ posts: []}, () => {\r\n            this.getPostsWithCommentsTimer.startTimer();\r\n            apiService.getPostsWithComments().then(data => {\r\n                this.getPostsWithCommentsTimer.stopTimer();\r\n                this.renderTimer.startTimer();\r\n                this.setState({posts: data, getPostsWithCommentsTimer: this.getPostsWithCommentsTimer}, () => {\r\n                    this.renderTimer.stopTimer();\r\n                    this.setState({renderTimer: this.renderTimer});\r\n                });\r\n            })\r\n        })\r\n    }\r\n\r\n    deletePost() {\r\n        this.deletePostTimer.startTimer();\r\n        apiService.deletePost(this.state.postId).then(() => {\r\n            this.deletePostTimer.stopTimer();\r\n            this.setState({deletePostTimer: this.deletePostTimer});\r\n        });\r\n    }\r\n\r\n    handleRowsNumberChange(rowsNumber) {\r\n        this.setState({rowsNumber});\r\n    }\r\n\r\n    clear() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const selectedPost = this.state.selectedPost;\r\n        return (\r\n            <div className=\"json-placeholder-container\">\r\n                <div className=\"actions\">\r\n                    <div>\r\n                        <MatSelect title=\"Choose post id\"\r\n                                   initialValue={this.state.postId}\r\n                                   handleChange={(e) => this.handleRowsNumberChange(e.target.value)}\r\n                                   selectDropdownList={arrayOfIds}/>\r\n                    </div>\r\n                    <div className=\"flex-row operations\">\r\n                        <PostBtn cb={(post) => this.addPost(post)}/>\r\n                        <PostBtn cb={(post) => this.updatePost(post)} isEditing postId={this.state.postId}/>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.getSelectedPost()}>Get post</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.deletePost()}>Delete post</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                                onClick={() => this.getPostsWithComments()}>Get 100 posts with 500 comments</Button>\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                                onClick={() => this.clear()}>Clear</Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"result-container\">\r\n                    <DisplayTimesJSONPlaceholder {...this.state}/>\r\n                </div>\r\n                <div>\r\n                    {selectedPost &&\r\n                    <p><b>Selected post:</b> {selectedPost.id} | {selectedPost.title} | {selectedPost.body}</p>}\r\n                </div>\r\n                <PostList posts={this.state.posts}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import HomeIcon from '@material-ui/icons/Home';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport Home from \"../pages/Home/Home\";\r\nimport LifecycleHooksBenchmark from \"../pages/LifecycleHooks/LifecycleHooksBenchmark\";\r\nimport LocalApiBenchmark from \"../pages/LocalApiBenchmark\";\r\nimport JSONPlaceholderBenchmark from \"../pages/JSONPlaceholder/JSONPlaceholderBenchmark\";\r\n\r\nconst Routes = [\r\n    {\r\n        sidebarName: 'Home',\r\n        component: Home,\r\n        path: '/',\r\n        icon: <HomeIcon/>,\r\n        children: [],\r\n    },\r\n    {\r\n        sidebarName: 'Lifecycle hooks benchmark',\r\n        component: LifecycleHooksBenchmark,\r\n        path: '/benchmarks/lifecycle-crud',\r\n        icon: <SpeedIcon/>,\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'REST API benchmark',\r\n        component: null,\r\n        path: '',\r\n        icon: <SpeedIcon/>,\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: '{JSON} Placeholder',\r\n        component: JSONPlaceholderBenchmark,\r\n        path: '/benchmarks/json-placeholder',\r\n        icon: <PublicIcon/>,\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Local API server',\r\n        component: LocalApiBenchmark,\r\n        path: '/benchmarks/local-rest-api',\r\n        icon: <PublicIcon/>,\r\n        children: []\r\n    }\r\n];\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Drawer, AppBar, MenuList, MenuItem, ListItemText, ListItemIcon\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Routes from \"../routes/Routes\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            textAlign: \"left\",\r\n            flexGrow: 1,\r\n        },\r\n        homeLink: {\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n        drawer: {\r\n            width: 300,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst NavigationBar = (props) => {\r\n    const classes = useStyles();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDrawer = (drawerState) => setIsOpen(drawerState);\r\n\r\n    const activeRoute = (routeName) => {\r\n        return props.location.pathname === routeName ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\"\r\n                                    className={classes.menuButton}\r\n                                    color=\"inherit\"\r\n                                    onClick={() => toggleDrawer(!isOpen)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            <a href=\"/\" className={classes.homeLink}>React</a>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Drawer classes={{ paper: classes.drawer }}\r\n                    open={isOpen}\r\n                    onClose={() => toggleDrawer(false)}>\r\n                <div className={classes.fullList}\r\n                     role=\"presentation\"\r\n                     onClick={() => toggleDrawer(false)}>\r\n                    <MenuList>\r\n                        {Routes.map((prop, key) => {\r\n                            return (\r\n                                <NavLink to={prop.path}\r\n                                         style={{ textDecoration: 'none', color: 'black' }}\r\n                                         key={key}>\r\n                                    <MenuItem selected={activeRoute(prop.path)}>\r\n                                        <ListItemIcon>{prop.icon}</ListItemIcon>\r\n                                        <ListItemText primary={prop.sidebarName} />\r\n                                    </MenuItem>\r\n                                </NavLink>\r\n                            );\r\n                        })}\r\n                    </MenuList>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, {Component} from \"react\"\r\nimport './App.css';\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport Routes from \"./routes/Routes\";\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#1e2438'\r\n        },\r\n\r\n    },\r\n});\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"App\">\r\n                    <div className=\"App\">\r\n                        <NavigationBar/>\r\n                        <Switch>\r\n                            {Routes.map(route => (\r\n                                route.component &&\r\n                                <Route exact path={route.path} key={route.path} component={route.component}/>\r\n                            ))}\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </MuiThemeProvider>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}