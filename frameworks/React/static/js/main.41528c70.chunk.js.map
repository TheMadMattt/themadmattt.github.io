{"version":3,"sources":["pages/Home.js","pages/LifecycleHooksBenchmark.js","pages/RandomUserGeneratorBenchmark.js","pages/JSONPlaceholderBenchmark.js","pages/LocalApiBenchmark.js","routes/Routes.js","components/NavigationBar.js","App.js","index.js"],"names":["Profiler","React","Home","props","reloadsCount","timer","state","cls","fid","fcp","lcp","ttfb","pageLoaded","localStorage","getItem","getTTFB","entries","duration","pageLoadedList","JSON","parse","push","setItem","stringify","setState","getFCP","fcpList","value","getLCP","lcpList","getCLS","clsList","getFID","this","setTimeout","reload","clearTimeout","removeItem","toString","window","location","id","phase","actualTime","baseTime","startTime","commitTime","console","log","onRender","callback","className","Button","variant","color","onClick","runBenchmark","Component","LifecycleHooksBenchmark","RandomUserGeneratorBenchmark","JSONPlaceholderBenchmark","LocalApiBenchmark","Routes","sidebarName","component","path","icon","HomeIcon","children","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","homeLink","textDecoration","drawer","width","fullList","withRouter","classes","useState","isOpen","setIsOpen","toggleDrawer","drawerState","AppBar","position","Toolbar","IconButton","edge","Typography","href","Drawer","paper","open","onClose","role","MenuList","map","prop","key","to","style","MenuItem","selected","routeName","pathname","ListItemText","primary","App","route","exact","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.41528c70.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./Home.css\"\r\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst Profiler = React.Profiler\r\n\r\nclass Home extends Component {\r\n    reloadsCount = 0;\r\n    timer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cls: 0,\r\n            fid: 0,\r\n            fcp: 0,\r\n            lcp: 0,\r\n            ttfb: 0,\r\n            pageLoaded: 0\r\n        }\r\n        this.reloadsCount = +localStorage.getItem(\"reloadsCounter\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        getTTFB(ttfb => {\r\n            const perfData = ttfb.entries[0];\r\n            const pageLoaded = perfData.duration;\r\n            let pageLoadedList = JSON.parse(localStorage.getItem(\"pageLoaded\"));\r\n            if (pageLoadedList === null) {\r\n                pageLoadedList = [];\r\n            }\r\n            pageLoadedList.push(pageLoaded);\r\n            localStorage.setItem(\"pageLoaded\", JSON.stringify(pageLoadedList));\r\n            this.setState({ttfb, pageLoaded});\r\n        });\r\n        getFCP(fcp => {\r\n            let fcpList = JSON.parse(localStorage.getItem(\"fcp\"));\r\n            if (fcpList === null) {\r\n                fcpList = [];\r\n            }\r\n            fcpList.push(fcp.value);\r\n            localStorage.setItem(\"fcp\", JSON.stringify(fcpList));\r\n            this.setState({fcp});\r\n        }, true);\r\n        getLCP(lcp => {\r\n            let lcpList = JSON.parse(localStorage.getItem(\"lcp\"));\r\n            if (lcpList === null) {\r\n                lcpList = [];\r\n            }\r\n            lcpList.push(lcp.value);\r\n            localStorage.setItem(\"lcp\", JSON.stringify(lcpList));\r\n            this.setState({lcp});\r\n        }, true);\r\n        getCLS(cls => {\r\n            let clsList = JSON.parse(localStorage.getItem(\"cls\"));\r\n            if (clsList === null) {\r\n                clsList = [];\r\n            }\r\n            clsList.push(cls.value);\r\n            localStorage.setItem(\"cls\", JSON.stringify(clsList));\r\n            this.setState({cls});\r\n        }, true);\r\n        getFID(fid => this.setState({fid}), true);\r\n        this.timer = setTimeout(() => this.reload(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    runBenchmark() {\r\n        this.reloadsCount = 4;\r\n        localStorage.removeItem(\"fcp\");\r\n        localStorage.removeItem(\"lcp\");\r\n        localStorage.removeItem(\"cls\");\r\n        localStorage.removeItem(\"pageLoaded\");\r\n        this.reload();\r\n    }\r\n\r\n    reload() {\r\n        if(this.reloadsCount > 0) {\r\n            localStorage.setItem(\"reloadsCounter\", (--this.reloadsCount).toString());\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    callback(id, phase, actualTime, baseTime, startTime, commitTime) {\r\n        console.log(id, phase, actualTime, baseTime, startTime, commitTime)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profiler id=\"benchmark-react\" onRender={this.callback}>\r\n                <div className=\"Home\">\r\n                    <div>\r\n                        <h1>Home</h1>\r\n                        <p>First Contentful Paint (FCP): {this.state.fcp.value} ms</p>\r\n                        <p>First Input Delay (FID): {this.state.fid.value} ms</p>\r\n                        <p>Largest Contentful Paint (LCP): {this.state.lcp.value} ms</p>\r\n                        <p>Time To First Byte (TTFB): {this.state.ttfb.value} ms</p>\r\n                        <p>Page loading time: {this.state.pageLoaded } ms</p>\r\n                    </div>\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Run benchmark</Button>\r\n                </div>\r\n            </Profiler>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import {Component} from \"react\";\r\n\r\nexport default class LifecycleHooksBenchmark extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <h1>LifecycleHooksBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class RandomUserGeneratorBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>RandomUserGeneratorBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class JSONPlaceholderBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>JSONPlaceholderBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class LocalApiBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>LocalApiBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import HomeIcon from '@material-ui/icons/Home';\r\nimport Home from \"../pages/Home\";\r\nimport LifecycleHooksBenchmark from \"../pages/LifecycleHooksBenchmark\";\r\nimport RandomUserGeneratorBenchmark from \"../pages/RandomUserGeneratorBenchmark\";\r\nimport JSONPlaceholderBenchmark from \"../pages/JSONPlaceholderBenchmark\";\r\nimport LocalApiBenchmark from \"../pages/LocalApiBenchmark\";\r\n\r\nconst Routes = [\r\n    {\r\n        sidebarName: 'Home',\r\n        component: Home,\r\n        path: '/',\r\n        icon: HomeIcon,\r\n        children: [],\r\n    },\r\n    {\r\n        sidebarName: 'Lifecycle hooks benchmark',\r\n        component: LifecycleHooksBenchmark,\r\n        path: '/benchmarks/lifecycle-crud',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'REST API benchmark',\r\n        component: null,\r\n        path: '',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Random User Generator',\r\n        component: RandomUserGeneratorBenchmark,\r\n        path: '/benchmarks/random-user-generator',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: '{JSON} Placeholder',\r\n        component: JSONPlaceholderBenchmark,\r\n        path: '/benchmarks/json-placeholder',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Local API server',\r\n        component: LocalApiBenchmark,\r\n        path: '/benchmarks/local-rest-api',\r\n        icon: '',\r\n        children: []\r\n    }\r\n];\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Drawer, AppBar, MenuList, MenuItem, ListItemText\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Routes from \"../routes/Routes\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            textAlign: \"left\",\r\n            flexGrow: 1,\r\n        },\r\n        homeLink: {\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n        drawer: {\r\n            width: 300,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst NavigationBar = (props) => {\r\n    const classes = useStyles();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDrawer = (drawerState) => setIsOpen(drawerState);\r\n\r\n    const activeRoute = (routeName) => {\r\n        return props.location.pathname === routeName ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\"\r\n                                    className={classes.menuButton}\r\n                                    color=\"inherit\"\r\n                                    onClick={() => toggleDrawer(!isOpen)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            <a href=\"/\" className={classes.homeLink}>React</a>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Drawer classes={{ paper: classes.drawer }}\r\n                    open={isOpen}\r\n                    onClose={() => toggleDrawer(false)}>\r\n                <div className={classes.fullList}\r\n                     role=\"presentation\"\r\n                     onClick={() => toggleDrawer(false)}>\r\n                    <MenuList>\r\n                        {Routes.map((prop, key) => {\r\n                            return (\r\n                                <NavLink to={prop.path}\r\n                                         style={{ textDecoration: 'none', color: 'black' }}\r\n                                         key={key}>\r\n                                    <MenuItem selected={activeRoute(prop.path)}>\r\n                                        <ListItemText primary={prop.sidebarName} />\r\n                                    </MenuItem>\r\n                                </NavLink>\r\n                            );\r\n                        })}\r\n                    </MenuList>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, {Component} from \"react\"\nimport './App.css';\nimport NavigationBar from \"./components/NavigationBar\";\nimport Routes from \"./routes/Routes\";\nimport {Switch, Route} from \"react-router-dom\"\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App\">\n                    <NavigationBar/>\n                    <Switch>\n                        {Routes.map(route => (\n                            route.component &&\n                            <Route exact path={route.path} key={route.path} component={route.component}/>\n                        ))}\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/frameworks/React/\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n//reportWebVitals();\n"],"sourceRoot":""}