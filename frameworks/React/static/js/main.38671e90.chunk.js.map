{"version":3,"sources":["pages/Home/components/DisplayLoadingTimes.jsx","pages/Home/Home.jsx","utils/Timer.js","utils/DummyDataService.js","components/DummyDataDisplay.jsx","pages/LifecycleHooks/components/MatSelect.jsx","components/DisplayTime.jsx","pages/LifecycleHooks/LifecycleHooksBenchmark.jsx","pages/RandomUserGeneratorBenchmark.jsx","pages/JSONPlaceholderBenchmark.jsx","pages/LocalApiBenchmark.jsx","routes/Routes.js","components/NavigationBar.jsx","App.jsx","index.js"],"names":["DisplayLoadingTimes","title","times","className","map","time","index","fcpTitle","lcpTitle","ttfbTitle","pageLoadingTitle","Home","props","reloadsCount","timer","state","fid","fcp","lcp","ttfb","pageLoaded","pageLoadedList","fcpList","lcpList","clsList","ttfbList","localStorage","getItem","getTTFB","entries","duration","JSON","parse","push","value","setItem","stringify","setState","getFCP","getLCP","this","setTimeout","reload","clearTimeout","clearLocalStorage","clear","toString","window","location","Button","variant","color","onClick","runBenchmark","Component","Timer","timerName","startTime","endTime","totalTime","averageTime","performance","now","length","getAverageTime","sum","reduce","a","b","adjectives","colors","nouns","random","max","Math","round","buildData","count","Array","fill","_","buildOneItem","id","description","completed","DummyDataDisplay","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","MatSelect","rowsNumber","handleChange","classes","FormControl","InputLabel","Select","onChange","label","MenuItem","displayTimeContainer","padding","textAlign","border","DisplayTime","useState","open","setOpen","handleDialog","onClose","DisplayTimeList","Dialog","DialogTitle","List","ListItem","LifecycleHooksBenchmark","isCreating","isAppending","createTimer","appendTimer","dummyData","prevProps","prevState","snapshot","stopTimer","isRemoving","removeTime","remove","isUpdating","delay","startTimer","appendData","concat","ms","Promise","resolve","e","handleRowsNumberChange","target","createRows","appendRows","clearDummyData","data","key","operationStartTime","operationEndTime","arraySize","componentsToTest","RandomUserGeneratorBenchmark","componentUnderTestIndex","componentUnderTest","renderCount","isBenchmarkRunning","myRef","React","createRef","selectedTest","divElementsForLoop","divElementsMap","results","dogsz","randomText","console","log","dt","current","textContent","asd","i","addMap","editOneMap","editAllMap","removeOneMap","removeAllMap","ref","dogs","JSONPlaceholderBenchmark","LocalApiBenchmark","Routes","sidebarName","component","path","icon","HomeIcon","children","createStyles","root","flexGrow","menuButton","marginRight","homeLink","textDecoration","drawer","width","fullList","withRouter","isOpen","setIsOpen","toggleDrawer","drawerState","AppBar","position","Toolbar","IconButton","edge","Typography","href","Drawer","paper","role","MenuList","prop","to","style","selected","routeName","pathname","ListItemText","primary","createMuiTheme","palette","main","App","route","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38671e90.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const DisplayLoadingTimes = ({title, times}) => {\r\n    return (\r\n        <div>\r\n            <p><b>{ title }</b></p>\r\n            <ul className=\"loading-metrics-box\">\r\n                {times.map((time, index) => <li key={index}>{time} ms</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./Home.css\"\r\nimport { getFCP, getLCP, getTTFB } from 'web-vitals';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {DisplayLoadingTimes} from \"./components/DisplayLoadingTimes\";\r\n\r\nconst fcpTitle = \"First Contentful Paint (FCP)\";\r\nconst lcpTitle = \"Largest Contentful Paint (LCP)\";\r\nconst ttfbTitle = \"Time To First Byte (TTFB)\";\r\nconst pageLoadingTitle = \"Page loading time\";\r\n\r\nclass Home extends Component {\r\n    reloadsCount = 0;\r\n    timer = null;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fid: 0,\r\n            fcp: 0,\r\n            lcp: 0,\r\n            ttfb: 0,\r\n            pageLoaded: 0,\r\n            pageLoadedList: [],\r\n            fcpList: [],\r\n            lcpList: [],\r\n            clsList: [],\r\n            ttfbList: []\r\n        }\r\n        this.reloadsCount = +localStorage.getItem(\"reloadsCounter\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        getTTFB(ttfb => {\r\n            const perfData = ttfb.entries[0];\r\n            const pageLoaded = perfData.duration;\r\n            let pageLoadedList = JSON.parse(localStorage.getItem(\"pageLoaded\"));\r\n            let ttfbList = JSON.parse(localStorage.getItem(\"ttfb\"));\r\n            if (pageLoadedList === null) {\r\n                pageLoadedList = [];\r\n            }\r\n            if (ttfbList === null) {\r\n                ttfbList = [];\r\n            }\r\n            pageLoadedList.push(pageLoaded);\r\n            ttfbList.push(ttfb.value)\r\n            localStorage.setItem(\"pageLoaded\", JSON.stringify(pageLoadedList));\r\n            localStorage.setItem(\"ttfb\", JSON.stringify(ttfbList));\r\n            this.setState({ttfb, pageLoaded, pageLoadedList, ttfbList});\r\n        });\r\n        getFCP(fcp => {\r\n            let fcpList = JSON.parse(localStorage.getItem(\"fcp\"));\r\n            if (fcpList === null) {\r\n                fcpList = [];\r\n            }\r\n            fcpList.push(fcp.value);\r\n            localStorage.setItem(\"fcp\", JSON.stringify(fcpList));\r\n            this.setState({fcp, fcpList});\r\n        }, true);\r\n        getLCP(lcp => {\r\n            let lcpList = JSON.parse(localStorage.getItem(\"lcp\"));\r\n            if (lcpList === null) {\r\n                lcpList = [];\r\n            }\r\n            lcpList.push(lcp.value);\r\n            localStorage.setItem(\"lcp\", JSON.stringify(lcpList));\r\n            this.setState({lcp, lcpList});\r\n        }, true);\r\n        this.timer = setTimeout(() => this.reload(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    runBenchmark() {\r\n        this.reloadsCount = 5;\r\n        this.clearLocalStorage();\r\n        this.reload();\r\n    }\r\n\r\n    clearLocalStorage() {\r\n        localStorage.clear();\r\n        this.setState({ fcpList: [], lcpList: [], ttfbList: [], pageLoadedList: []});\r\n    }\r\n\r\n    reload() {\r\n        if(this.reloadsCount > 0) {\r\n            localStorage.setItem(\"reloadsCounter\", (--this.reloadsCount).toString());\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home flex-column\">\r\n                <div>\r\n                    <p><b>{fcpTitle}:</b> {this.state.fcp.value} ms</p>\r\n                    <p><b>{lcpTitle}:</b> {this.state.lcp.value} ms</p>\r\n                    <p><b>{ttfbTitle}:</b> {this.state.ttfb.value} ms</p>\r\n                    <p><b>{pageLoadingTitle}:</b> {this.state.pageLoaded } ms</p>\r\n                </div>\r\n                <div className=\"flex-row flex-center\">\r\n                    <DisplayLoadingTimes title={fcpTitle} times={this.state.fcpList}/>\r\n                    <DisplayLoadingTimes title={lcpTitle} times={this.state.lcpList}/>\r\n                    <DisplayLoadingTimes title={ttfbTitle} times={this.state.ttfbList}/>\r\n                    <DisplayLoadingTimes title={pageLoadingTitle} times={this.state.pageLoadedList}/>\r\n                </div>\r\n                <div className=\"ButtonMargin\">\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Run benchmark</Button>\r\n\r\n                    <Button variant=\"contained\"\r\n                            className=\"red-btn\"\r\n                            onClick={() => this.clearLocalStorage()}>Clear local storage</Button>\r\n\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.runBenchmark()}>Save to excel</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","export default class Timer {\r\n  timerName = '';\r\n  startTime = 0;\r\n  endTime = 0;\r\n  totalTime = 0;\r\n  times = [];\r\n  averageTime = 0;\r\n\r\n  constructor(timerName) {\r\n    this.timerName = timerName;\r\n  }\r\n\r\n  startTimer() {\r\n    this.startTime = performance.now();\r\n  }\r\n\r\n  stopTimer() {\r\n    if (this.startTime !== 0) {\r\n      this.endTime = performance.now();\r\n      this.totalTime = this.endTime - this.startTime;\r\n      this.times.push(this.totalTime);\r\n      if (this.times.length > 2) {\r\n        this.getAverageTime();\r\n      }\r\n    }\r\n  }\r\n\r\n  getAverageTime() {\r\n    const sum = this.times.reduce((a, b) => a + b);\r\n    this.averageTime = (sum / this.times.length);\r\n    return this.averageTime;\r\n  }\r\n\r\n  clear() {\r\n    this.startTime = 0;\r\n    this.endTime = 0;\r\n    this.totalTime = 0;\r\n    this.times = [];\r\n    this.averageTime = 0;\r\n  }\r\n}\r\n","const adjectives = [\r\n  'bad', 'best', 'better', 'big', 'certain', 'clear', 'different', 'early', 'easy', 'economic', 'federal', 'free',\r\n  'full', 'good', 'great', 'hard', 'high', 'human', 'important', 'international', 'large', 'late', 'little', 'local',\r\n  'long', 'low', 'major', 'military', 'national', 'new', 'old', 'only', 'other', 'political', 'possible', 'public',\r\n  'real', 'recent', 'right', 'small', 'social', 'special', 'strong', 'sure', 'true', 'white', 'whole', 'young',\r\n  'crazy', 'helpful', 'mushy'\r\n];\r\n\r\nconst colors = [\r\n  'red', 'yellow', 'blue', 'green', 'pink', 'brown', 'purple', 'brown', 'white', 'black', 'orange'\r\n];\r\n\r\nconst nouns = [\r\n  'area', 'book', 'business', 'case', 'child', 'company', 'country', 'day', 'eye', 'fact', 'family', 'government',\r\n  'group', 'hand', 'home', 'job', 'life', 'lot', 'man', 'money', 'month', 'mother', 'Mr', 'night', 'number', 'part',\r\n  'people', 'place', 'point', 'problem', 'program', 'question', 'right', 'room', 'school', 'state', 'story',\r\n  'student', 'study', 'system', 'thing', 'time', 'water', 'way', 'week', 'woman', 'word', 'work', 'world', 'year'\r\n];\r\n\r\nconst random = (max) => {\r\n  return Math.round(Math.random() * 1000) % max;\r\n}\r\n\r\nexport const buildData = (count) => {\r\n  return Array(count).fill(1).map((_, index) => {\r\n    return buildOneItem(index);\r\n  });\r\n}\r\n\r\nexport const buildOneItem = (id) => {\r\n  const title = nouns[random(nouns.length)];\r\n  const desc = `${adjectives[random(adjectives.length)]} ${colors[random(colors.length)]} ${nouns[random(nouns.length)]}`\r\n  const completed = false;\r\n  return {\r\n    id,\r\n    title,\r\n    description: desc,\r\n    completed\r\n  }\r\n}\r\n","import React from 'react';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport const DummyDataDisplay = ({ id, title, description, completed }) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td>{ id }</td>\r\n            <td>{ title }</td>\r\n            <td>{ description }</td>\r\n            <td>{ completed ? <DoneIcon/> : <ClearIcon/> }</td>\r\n        </tr>\r\n    );\r\n}\r\n","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nexport const MatSelect = ({rowsNumber, handleChange}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel>Row number</InputLabel>\r\n            <Select\r\n                value={rowsNumber}\r\n                onChange={handleChange}\r\n                label=\"Row number\"\r\n            >\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n                <MenuItem value={10000}>10000</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Button, Dialog, DialogTitle, List, ListItem} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    displayTimeContainer: {\r\n        padding: \"10px\",\r\n        textAlign: \"center\",\r\n        border: \"2px solid black\",\r\n        margin: \"5px\"\r\n    }\r\n});\r\n\r\nexport const DisplayTime = ({title, timer}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const time = timer && (timer.averageTime > 0 ? timer.averageTime : timer.totalTime);\r\n\r\n    const handleDialog = (value) => {\r\n        setOpen(value);\r\n    };\r\n\r\n    const props = { onClose: handleDialog, open, timer, title }\r\n\r\n    return (\r\n        <div className={classes.displayTimeContainer}>\r\n            <div>\r\n                <h3><strong>{title}</strong></h3>\r\n                {timer ? time : 0 } ms\r\n            </div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => handleDialog(true)}>CLICK</Button>\r\n            <DisplayTimeList {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DisplayTimeList = (props) => {\r\n    const { onClose, open, timer, title } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>{title}</DialogTitle>\r\n            <List>\r\n                {timer?.times.map((time, index) => (\r\n                    <ListItem key={index}>{time}</ListItem>\r\n                ))}\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport Timer from \"../../utils/Timer\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {buildData} from \"../../utils/DummyDataService\";\r\nimport {DummyDataDisplay} from \"../../components/DummyDataDisplay\";\r\nimport \"./LifecycleHooks.css\";\r\nimport {MatSelect} from \"./components/MatSelect\";\r\nimport {DisplayTime} from \"../../components/DisplayTime\";\r\n\r\nexport default class LifecycleHooksBenchmark extends Component {\r\n    isCreating = false;\r\n    isAppending = false;\r\n    createTimer = new Timer('createDummyData');\r\n    appendTimer = new Timer('appendDummyData');\r\n\r\n    state = {\r\n        dummyData: [],\r\n        rowsNumber: 1000,\r\n        createTimer: null,\r\n        appendTimer: null\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.isAppending) {\r\n            this.appendTimer.stopTimer();\r\n            this.isAppending = false;\r\n            this.setState({appendTimer: this.appendTimer});\r\n        }\r\n        if(this.isRemoving) {\r\n            this.removeTime = performance.now() - this.startTime;\r\n            this.remove.push(this.removeTime);\r\n            this.removeTime = 0;\r\n            this.isUpdating = false;\r\n        }\r\n    }\r\n\r\n    async createRows() {\r\n        this.setState({dummyData: []});\r\n        await this.delay(0);\r\n        this.createTimer.startTimer();\r\n        this.setState({dummyData: buildData(this.state.rowsNumber)}, () => {\r\n            this.createTimer.stopTimer();\r\n            this.setState({createTimer: this.createTimer});\r\n        });\r\n    }\r\n\r\n    async appendRows() {\r\n        const appendData = buildData(this.state.rowsNumber);\r\n        this.setState({dummyData: appendData});\r\n        await this.delay(0);\r\n        this.appendTimer.startTimer();\r\n        this.setState(prevState => ({\r\n            dummyData: prevState.dummyData.concat(appendData)\r\n        }), () => {\r\n            this.appendTimer.stopTimer();\r\n            this.setState({appendTimer: this.appendTimer});\r\n        });\r\n    }\r\n\r\n    delay(ms) {\r\n        return new Promise( resolve => setTimeout(resolve, ms) );\r\n    }\r\n\r\n    handleRowsNumberChange(rowsNumber) {\r\n        this.setState({rowsNumber});\r\n    }\r\n\r\n    clearDummyData() {\r\n        this.setState({dummyData: []});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"actions\">\r\n                    <div>\r\n                        <MatSelect rowsNumber={this.state.rowsNumber}\r\n                                   handleChange={(e) => this.handleRowsNumberChange(e.target.value)}/>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                            onClick={() => this.createRows()}>Create {this.state.rowsNumber} rows</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                            onClick={() => this.appendRows()}>Append {this.state.rowsNumber} rows</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"ButtonMargin\"\r\n                            onClick={() => this.createRows()}>Create rows</Button>\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n                            onClick={() => this.clearDummyData()}>Clear</Button>\r\n                </div>\r\n                <div className=\"result-container\">\r\n                    <DisplayTime title={\"Creating \" + this.state.rowsNumber + \" rows\"}\r\n                                 timer={this.state.createTimer}/>\r\n                    <DisplayTime title={\"Appending \" + this.state.rowsNumber + \" rows\"}\r\n                                 timer={this.state.appendTimer}/>\r\n                </div>\r\n                <div className=\"data-table\">\r\n                    <table>\r\n                        <tbody>\r\n                        {this.state.dummyData.map((data, index) =>\r\n                            <DummyDataDisplay {...data} key={index} />\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nlet operationStartTime = null\r\nlet operationEndTime = null\r\n\r\nconst repeats = 1;\r\nconst arraySize = 1000;\r\n\r\nconst componentsToTest = [\r\n    'Component',\r\n    'Component',\r\n    'Component',\r\n    'Component',\r\n    'Component'\r\n];\r\n\r\nexport default class RandomUserGeneratorBenchmark extends Component {\r\n    componentUnderTestIndex = -1;\r\n    componentUnderTest = null;\r\n    renderCount = -1;\r\n    times = [];\r\n    isBenchmarkRunning = false;\r\n    isRemoving = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedTest: 0,\r\n            divElementsForLoop: [],\r\n            divElementsMap: 0,\r\n            results: [],\r\n            dogsz: 1,\r\n            randomText: 'asd',\r\n            times: []\r\n        };\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        operationEndTime = performance.now()\r\n        console.log('Operation took ' + (operationEndTime - operationStartTime) + ' milliseconds')\r\n        ++this.renderCount;\r\n        this.dt += performance.now() - this.startTime;\r\n        if (this.renderCount % repeats === 0) {\r\n            if (this.componentUnderTestIndex > -1) {\r\n                this.times.push(this.dt);\r\n            }\r\n            ++this.componentUnderTestIndex;\r\n            this.dt = 0;\r\n            this.componentUnderTest = componentsToTest[this.componentUnderTestIndex];\r\n        }\r\n        if (this.componentUnderTest) {\r\n            if(this.isCreating) {\r\n                setTimeout(() => {\r\n                    this.startTime = performance.now();\r\n                    this.setState({ divElementsMap: arraySize });\r\n                }, 0);\r\n            }\r\n            if(this.isRemoving) {\r\n                this.setState({ divElementsMap: arraySize });\r\n                setTimeout(() => {\r\n                    this.startTime = performance.now();\r\n                    this.setState({ divElementsMap: 0 });\r\n                }, 0);\r\n            }\r\n        } else {\r\n            if (this.isBenchmarkRunning) {\r\n                this.setState({times: this.times});\r\n                this.isBenchmarkRunning = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1\r\n    addMap() {\r\n        this.isBenchmarkRunning = true;\r\n        this.isCreating = true;\r\n        this.renderCount = -1;\r\n        operationStartTime = performance.now()\r\n        this.setState({\r\n            divElementsMap: arraySize\r\n        })\r\n    }\r\n\r\n    // 2\r\n    editOneMap() {\r\n        operationStartTime = performance.now()\r\n        this.myRef.current.textContent = Math.random()\r\n        this.setState({\r\n            randomText: Math.random()\r\n        })\r\n    }\r\n\r\n    // 3\r\n    editAllMap() {\r\n        operationStartTime = performance.now()\r\n        this.setState({\r\n            dogsz: Math.random()\r\n        })\r\n    }\r\n\r\n    // 4\r\n    removeOneMap() {\r\n        operationStartTime = performance.now()\r\n        let asd = this.state.divElementsMap\r\n        this.setState({\r\n            divElementsMap: asd - 1\r\n        })\r\n    }\r\n\r\n    // 5\r\n    removeAllMap() {\r\n        this.isBenchmarkRunning = true;\r\n        this.isRemoving = true;\r\n        this.renderCount = -1;\r\n        operationStartTime = performance.now()\r\n        this.setState({\r\n            divElementsMap: arraySize\r\n        })\r\n    }\r\n\r\n    dogs(i) {\r\n        return this.state.dogsz * i\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Benchmark\">\r\n                <p>B) Array map</p>\r\n                <button onClick={() => this.addMap()}>1 Add</button>\r\n                <button onClick={() => this.editOneMap()}>2 Edit one</button>\r\n                <button onClick={() => this.editAllMap()}>3 Edit all</button>\r\n                <button onClick={() => this.removeOneMap()}>4 Remove one</button>\r\n                <button onClick={() => this.removeAllMap()}>5 Remove all</button>\r\n\r\n                <div>\r\n                    <ul>\r\n                        {this.state.times.map((time, index) =>\r\n                            <li key={index}>{time}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div>\r\n                    {this.state.divElementsForLoop}\r\n                </div>\r\n\r\n                <div\r\n                    id=\"divElementsMap\">\r\n                    {\r\n                        [...Array(this.state.divElementsMap)].map(\r\n                            (e, i) =>\r\n                                <div\r\n                                    id={i}\r\n                                    key={i}\r\n                                    ref={this.myRef}>\r\n                                    <p>Div {this.dogs(i)} {Math.random()}</p>\r\n                                </div>\r\n                        )\r\n                    }\r\n                    <p>{ this.state.randomText }</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class JSONPlaceholderBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>JSONPlaceholderBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import {Component} from \"react\";\r\n\r\nexport default class LocalApiBenchmark extends Component {\r\n    render() {\r\n        return (\r\n            <h1>LocalApiBenchmark</h1>\r\n        )\r\n    }\r\n}\r\n","import HomeIcon from '@material-ui/icons/Home';\r\nimport Home from \"../pages/Home/Home\";\r\nimport LifecycleHooksBenchmark from \"../pages/LifecycleHooks/LifecycleHooksBenchmark\";\r\nimport RandomUserGeneratorBenchmark from \"../pages/RandomUserGeneratorBenchmark\";\r\nimport JSONPlaceholderBenchmark from \"../pages/JSONPlaceholderBenchmark\";\r\nimport LocalApiBenchmark from \"../pages/LocalApiBenchmark\";\r\n\r\nconst Routes = [\r\n    {\r\n        sidebarName: 'Home',\r\n        component: Home,\r\n        path: '/',\r\n        icon: HomeIcon,\r\n        children: [],\r\n    },\r\n    {\r\n        sidebarName: 'Lifecycle hooks benchmark',\r\n        component: LifecycleHooksBenchmark,\r\n        path: '/benchmarks/lifecycle-crud',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'REST API benchmark',\r\n        component: null,\r\n        path: '',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Random User Generator',\r\n        component: RandomUserGeneratorBenchmark,\r\n        path: '/benchmarks/random-user-generator',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: '{JSON} Placeholder',\r\n        component: JSONPlaceholderBenchmark,\r\n        path: '/benchmarks/json-placeholder',\r\n        icon: '',\r\n        children: []\r\n    },\r\n    {\r\n        sidebarName: 'Local API server',\r\n        component: LocalApiBenchmark,\r\n        path: '/benchmarks/local-rest-api',\r\n        icon: '',\r\n        children: []\r\n    }\r\n];\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Drawer, AppBar, MenuList, MenuItem, ListItemText\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Routes from \"../routes/Routes\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            textAlign: \"left\",\r\n            flexGrow: 1,\r\n        },\r\n        homeLink: {\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n        drawer: {\r\n            width: 300,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst NavigationBar = (props) => {\r\n    const classes = useStyles();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDrawer = (drawerState) => setIsOpen(drawerState);\r\n\r\n    const activeRoute = (routeName) => {\r\n        return props.location.pathname === routeName ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\"\r\n                                    className={classes.menuButton}\r\n                                    color=\"inherit\"\r\n                                    onClick={() => toggleDrawer(!isOpen)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            <a href=\"/\" className={classes.homeLink}>React</a>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Drawer classes={{ paper: classes.drawer }}\r\n                    open={isOpen}\r\n                    onClose={() => toggleDrawer(false)}>\r\n                <div className={classes.fullList}\r\n                     role=\"presentation\"\r\n                     onClick={() => toggleDrawer(false)}>\r\n                    <MenuList>\r\n                        {Routes.map((prop, key) => {\r\n                            return (\r\n                                <NavLink to={prop.path}\r\n                                         style={{ textDecoration: 'none', color: 'black' }}\r\n                                         key={key}>\r\n                                    <MenuItem selected={activeRoute(prop.path)}>\r\n                                        <ListItemText primary={prop.sidebarName} />\r\n                                    </MenuItem>\r\n                                </NavLink>\r\n                            );\r\n                        })}\r\n                    </MenuList>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, {Component} from \"react\"\nimport './App.css';\nimport NavigationBar from \"./components/NavigationBar\";\nimport Routes from \"./routes/Routes\";\nimport {Switch, Route} from \"react-router-dom\"\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1e2438'\n        },\n\n    },\n});\n\nclass App extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <div className=\"App\">\n                        <NavigationBar/>\n                        <Switch>\n                            {Routes.map(route => (\n                                route.component &&\n                                <Route exact path={route.path} key={route.path} component={route.component}/>\n                            ))}\n                        </Switch>\n                    </div>\n                </div>\n            </MuiThemeProvider>\n\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}