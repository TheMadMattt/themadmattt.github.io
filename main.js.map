{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h1>TEST</h1>\n<button type=\"button\" id=\"create\" (click)=\"this.create1000rows()\">CREATE 1000 ROWS</button>\n<button type=\"button\" (click)=\"this.run5Times()\">Execute</button>\n<button type=\"button\" (click)=\"clear()\">CLEAR</button>\n<p>{{ 'CREATE: ' + createTime}}, {{ 'Render: ' + createRenderTime }}</p>\n<div id=\"list\" *ngFor=\"let item of array\">\n  <div id=\"item\">\n    <h1>{{ item.name }}</h1>\n    <h3>{{ item.desc }}</h3>\n  </div>\n</div>\n","import {\n  AfterViewChecked, ChangeDetectorRef, Component, DoCheck\n} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewChecked, DoCheck {\n  array: any[] = [];\n\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  ngDoCheck(): void {\n    console.log(this.createRenderTime);\n  }\n\n  isCreating = false;\n  createTime = 0;\n  createRenderTime = 0;\n  createRenderTimeArr: number[] = [];\n  create1000rows(): void {\n    this.isCreating = true;\n    this.createTime = performance.now();\n    this.createRenderTime = performance.now();\n    for (let i = 0; i < 1000; i++) {\n      this.array.push({\n        name: 'TEST: ' + i,\n        desc: 'DESC ' + i\n      });\n    }\n    this.createTime = performance.now() - this.createTime\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.isCreating) {\n      this.createRenderTime = performance.now() - this.createRenderTime;\n      this.createRenderTimeArr.push(this.createRenderTime);\n      this.isCreating = false;\n      this.cdr.detectChanges();\n    }\n  }\n\n  clear(): void {\n    this.array = [];\n    this.createTime = 0;\n    this.createRenderTime = 0;\n  }\n\n  run5Times() {\n    for (let i = 0; i < 5; i++) {\n      setTimeout(() => {\n        this.create1000rows();\n        this.array = [];\n        this.cdr.detectChanges();\n      }, 5000);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}